
lab 4b.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800200  000011ac  00001240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000110  00800308  00800308  00001348  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001348  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001378  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  000013b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000022d6  00000000  00000000  000014c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f47  00000000  00000000  00003796  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000103f  00000000  00000000  000046dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000478  00000000  00000000  0000571c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000087b  00000000  00000000  00005b94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001387  00000000  00000000  0000640f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00007796  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	89 c1       	rjmp	.+786    	; 0x320 <__vector_3>
       e:	00 00       	nop
      10:	98 c4       	rjmp	.+2352   	; 0x942 <__vector_4>
      12:	00 00       	nop
      14:	a3 c2       	rjmp	.+1350   	; 0x55c <__vector_5>
      16:	00 00       	nop
      18:	de c1       	rjmp	.+956    	; 0x3d6 <__vector_6>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	7c c1       	rjmp	.+760    	; 0x36e <__vector_29>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	d7 c1       	rjmp	.+942    	; 0x430 <__vector_32>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec ea       	ldi	r30, 0xAC	; 172
      fc:	f1 e1       	ldi	r31, 0x11	; 17
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	24 e0       	ldi	r18, 0x04	; 4
     110:	a8 e0       	ldi	r26, 0x08	; 8
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a8 31       	cpi	r26, 0x18	; 24
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	77 d5       	rcall	.+2798   	; 0xc0e <main>
     120:	0c 94 d4 08 	jmp	0x11a8	; 0x11a8 <_exit>

00000124 <__bad_interrupt>:
     124:	1b c1       	rjmp	.+566    	; 0x35c <__vector_default>

00000126 <LCDBusyLoop>:
     126:	87 b1       	in	r24, 0x07	; 7
     128:	80 7f       	andi	r24, 0xF0	; 240
     12a:	87 b9       	out	0x07, r24	; 7
     12c:	45 9a       	sbi	0x08, 5	; 8
     12e:	46 98       	cbi	0x08, 6	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     130:	82 e0       	ldi	r24, 0x02	; 2
     132:	8a 95       	dec	r24
     134:	f1 f7       	brne	.-4      	; 0x132 <LCDBusyLoop+0xc>
     136:	00 c0       	rjmp	.+0      	; 0x138 <LCDBusyLoop+0x12>
     138:	47 9a       	sbi	0x08, 7	; 8
     13a:	92 e0       	ldi	r25, 0x02	; 2
     13c:	9a 95       	dec	r25
     13e:	f1 f7       	brne	.-4      	; 0x13c <LCDBusyLoop+0x16>
     140:	00 c0       	rjmp	.+0      	; 0x142 <LCDBusyLoop+0x1c>
     142:	86 b1       	in	r24, 0x06	; 6
     144:	82 95       	swap	r24
     146:	80 7f       	andi	r24, 0xF0	; 240
     148:	92 e0       	ldi	r25, 0x02	; 2
     14a:	9a 95       	dec	r25
     14c:	f1 f7       	brne	.-4      	; 0x14a <LCDBusyLoop+0x24>
     14e:	00 c0       	rjmp	.+0      	; 0x150 <LCDBusyLoop+0x2a>
     150:	47 98       	cbi	0x08, 7	; 8
     152:	95 e0       	ldi	r25, 0x05	; 5
     154:	9a 95       	dec	r25
     156:	f1 f7       	brne	.-4      	; 0x154 <LCDBusyLoop+0x2e>
     158:	00 00       	nop
     15a:	47 9a       	sbi	0x08, 7	; 8
     15c:	92 e0       	ldi	r25, 0x02	; 2
     15e:	9a 95       	dec	r25
     160:	f1 f7       	brne	.-4      	; 0x15e <LCDBusyLoop+0x38>
     162:	00 c0       	rjmp	.+0      	; 0x164 <LCDBusyLoop+0x3e>
     164:	96 b1       	in	r25, 0x06	; 6
     166:	92 e0       	ldi	r25, 0x02	; 2
     168:	9a 95       	dec	r25
     16a:	f1 f7       	brne	.-4      	; 0x168 <LCDBusyLoop+0x42>
     16c:	00 c0       	rjmp	.+0      	; 0x16e <LCDBusyLoop+0x48>
     16e:	47 98       	cbi	0x08, 7	; 8
     170:	95 e0       	ldi	r25, 0x05	; 5
     172:	9a 95       	dec	r25
     174:	f1 f7       	brne	.-4      	; 0x172 <LCDBusyLoop+0x4c>
     176:	00 00       	nop
     178:	88 23       	and	r24, r24
     17a:	f4 f2       	brlt	.-68     	; 0x138 <LCDBusyLoop+0x12>
     17c:	45 98       	cbi	0x08, 5	; 8
     17e:	87 b1       	in	r24, 0x07	; 7
     180:	8f 60       	ori	r24, 0x0F	; 15
     182:	87 b9       	out	0x07, r24	; 7
     184:	08 95       	ret

00000186 <LCDByte>:
     186:	28 2f       	mov	r18, r24
     188:	22 95       	swap	r18
     18a:	2f 70       	andi	r18, 0x0F	; 15
     18c:	8f 70       	andi	r24, 0x0F	; 15
     18e:	61 11       	cpse	r22, r1
     190:	02 c0       	rjmp	.+4      	; 0x196 <LCDByte+0x10>
     192:	46 98       	cbi	0x08, 6	; 8
     194:	01 c0       	rjmp	.+2      	; 0x198 <LCDByte+0x12>
     196:	46 9a       	sbi	0x08, 6	; 8
     198:	92 e0       	ldi	r25, 0x02	; 2
     19a:	9a 95       	dec	r25
     19c:	f1 f7       	brne	.-4      	; 0x19a <LCDByte+0x14>
     19e:	00 c0       	rjmp	.+0      	; 0x1a0 <LCDByte+0x1a>
     1a0:	47 9a       	sbi	0x08, 7	; 8
     1a2:	98 b1       	in	r25, 0x08	; 8
     1a4:	90 7f       	andi	r25, 0xF0	; 240
     1a6:	92 2b       	or	r25, r18
     1a8:	98 b9       	out	0x08, r25	; 8
     1aa:	95 e0       	ldi	r25, 0x05	; 5
     1ac:	9a 95       	dec	r25
     1ae:	f1 f7       	brne	.-4      	; 0x1ac <LCDByte+0x26>
     1b0:	00 00       	nop
     1b2:	47 98       	cbi	0x08, 7	; 8
     1b4:	95 e0       	ldi	r25, 0x05	; 5
     1b6:	9a 95       	dec	r25
     1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCDByte+0x30>
     1ba:	00 00       	nop
     1bc:	47 9a       	sbi	0x08, 7	; 8
     1be:	98 b1       	in	r25, 0x08	; 8
     1c0:	90 7f       	andi	r25, 0xF0	; 240
     1c2:	89 2b       	or	r24, r25
     1c4:	88 b9       	out	0x08, r24	; 8
     1c6:	85 e0       	ldi	r24, 0x05	; 5
     1c8:	8a 95       	dec	r24
     1ca:	f1 f7       	brne	.-4      	; 0x1c8 <LCDByte+0x42>
     1cc:	00 00       	nop
     1ce:	47 98       	cbi	0x08, 7	; 8
     1d0:	95 e0       	ldi	r25, 0x05	; 5
     1d2:	9a 95       	dec	r25
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <LCDByte+0x4c>
     1d6:	00 00       	nop
     1d8:	a6 cf       	rjmp	.-180    	; 0x126 <LCDBusyLoop>
     1da:	08 95       	ret

000001dc <InitLCD>:
     1dc:	cf 93       	push	r28
     1de:	c8 2f       	mov	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1e0:	2f ef       	ldi	r18, 0xFF	; 255
     1e2:	86 e7       	ldi	r24, 0x76	; 118
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	21 50       	subi	r18, 0x01	; 1
     1e8:	80 40       	sbci	r24, 0x00	; 0
     1ea:	90 40       	sbci	r25, 0x00	; 0
     1ec:	e1 f7       	brne	.-8      	; 0x1e6 <InitLCD+0xa>
     1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <InitLCD+0x14>
     1f0:	00 00       	nop
     1f2:	87 b1       	in	r24, 0x07	; 7
     1f4:	8f 60       	ori	r24, 0x0F	; 15
     1f6:	87 b9       	out	0x07, r24	; 7
     1f8:	3f 9a       	sbi	0x07, 7	; 7
     1fa:	3e 9a       	sbi	0x07, 6	; 7
     1fc:	3d 9a       	sbi	0x07, 5	; 7
     1fe:	88 b1       	in	r24, 0x08	; 8
     200:	80 7f       	andi	r24, 0xF0	; 240
     202:	88 b9       	out	0x08, r24	; 8
     204:	47 98       	cbi	0x08, 7	; 8
     206:	45 98       	cbi	0x08, 5	; 8
     208:	46 98       	cbi	0x08, 6	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     20a:	00 c0       	rjmp	.+0      	; 0x20c <InitLCD+0x30>
     20c:	00 c0       	rjmp	.+0      	; 0x20e <InitLCD+0x32>
     20e:	00 00       	nop
     210:	47 9a       	sbi	0x08, 7	; 8
     212:	41 9a       	sbi	0x08, 1	; 8
     214:	25 e0       	ldi	r18, 0x05	; 5
     216:	2a 95       	dec	r18
     218:	f1 f7       	brne	.-4      	; 0x216 <InitLCD+0x3a>
     21a:	00 00       	nop
     21c:	47 98       	cbi	0x08, 7	; 8
     21e:	85 e0       	ldi	r24, 0x05	; 5
     220:	8a 95       	dec	r24
     222:	f1 f7       	brne	.-4      	; 0x220 <InitLCD+0x44>
     224:	00 00       	nop
     226:	7f df       	rcall	.-258    	; 0x126 <LCDBusyLoop>
     228:	60 e0       	ldi	r22, 0x00	; 0
     22a:	8c 2f       	mov	r24, r28
     22c:	8c 60       	ori	r24, 0x0C	; 12
     22e:	ab df       	rcall	.-170    	; 0x186 <LCDByte>
     230:	60 e0       	ldi	r22, 0x00	; 0
     232:	88 e2       	ldi	r24, 0x28	; 40
     234:	a8 df       	rcall	.-176    	; 0x186 <LCDByte>
     236:	cf 91       	pop	r28
     238:	08 95       	ret

0000023a <LCDWriteString>:
     23a:	cf 93       	push	r28
     23c:	df 93       	push	r29
     23e:	ec 01       	movw	r28, r24
     240:	88 81       	ld	r24, Y
     242:	88 23       	and	r24, r24
     244:	31 f0       	breq	.+12     	; 0x252 <LCDWriteString+0x18>
     246:	21 96       	adiw	r28, 0x01	; 1
     248:	61 e0       	ldi	r22, 0x01	; 1
     24a:	9d df       	rcall	.-198    	; 0x186 <LCDByte>
     24c:	89 91       	ld	r24, Y+
     24e:	81 11       	cpse	r24, r1
     250:	fb cf       	rjmp	.-10     	; 0x248 <LCDWriteString+0xe>
     252:	df 91       	pop	r29
     254:	cf 91       	pop	r28
     256:	08 95       	ret

00000258 <LCDWriteInt>:
     258:	ef 92       	push	r14
     25a:	ff 92       	push	r15
     25c:	0f 93       	push	r16
     25e:	1f 93       	push	r17
     260:	cf 93       	push	r28
     262:	df 93       	push	r29
     264:	00 d0       	rcall	.+0      	; 0x266 <LCDWriteInt+0xe>
     266:	1f 92       	push	r1
     268:	1f 92       	push	r1
     26a:	cd b7       	in	r28, 0x3d	; 61
     26c:	de b7       	in	r29, 0x3e	; 62
     26e:	7b 01       	movw	r14, r22
     270:	fe 01       	movw	r30, r28
     272:	31 96       	adiw	r30, 0x01	; 1
     274:	25 e0       	ldi	r18, 0x05	; 5
     276:	df 01       	movw	r26, r30
     278:	1d 92       	st	X+, r1
     27a:	2a 95       	dec	r18
     27c:	e9 f7       	brne	.-6      	; 0x278 <LCDWriteInt+0x20>
     27e:	00 97       	sbiw	r24, 0x00	; 0
     280:	51 f0       	breq	.+20     	; 0x296 <LCDWriteInt+0x3e>
     282:	35 96       	adiw	r30, 0x05	; 5
     284:	2a e0       	ldi	r18, 0x0A	; 10
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	b9 01       	movw	r22, r18
     28a:	46 d6       	rcall	.+3212   	; 0xf18 <__divmodhi4>
     28c:	82 93       	st	-Z, r24
     28e:	86 2f       	mov	r24, r22
     290:	97 2f       	mov	r25, r23
     292:	00 97       	sbiw	r24, 0x00	; 0
     294:	c9 f7       	brne	.-14     	; 0x288 <LCDWriteInt+0x30>
     296:	bf ef       	ldi	r27, 0xFF	; 255
     298:	eb 16       	cp	r14, r27
     29a:	fb 06       	cpc	r15, r27
     29c:	69 f4       	brne	.+26     	; 0x2b8 <LCDWriteInt+0x60>
     29e:	89 81       	ldd	r24, Y+1	; 0x01
     2a0:	81 11       	cpse	r24, r1
     2a2:	1d c0       	rjmp	.+58     	; 0x2de <LCDWriteInt+0x86>
     2a4:	fe 01       	movw	r30, r28
     2a6:	32 96       	adiw	r30, 0x02	; 2
     2a8:	00 e0       	ldi	r16, 0x00	; 0
     2aa:	10 e0       	ldi	r17, 0x00	; 0
     2ac:	0f 5f       	subi	r16, 0xFF	; 255
     2ae:	1f 4f       	sbci	r17, 0xFF	; 255
     2b0:	81 91       	ld	r24, Z+
     2b2:	88 23       	and	r24, r24
     2b4:	d9 f3       	breq	.-10     	; 0x2ac <LCDWriteInt+0x54>
     2b6:	0f c0       	rjmp	.+30     	; 0x2d6 <LCDWriteInt+0x7e>
     2b8:	05 e0       	ldi	r16, 0x05	; 5
     2ba:	10 e0       	ldi	r17, 0x00	; 0
     2bc:	0e 19       	sub	r16, r14
     2be:	1f 09       	sbc	r17, r15
     2c0:	0a c0       	rjmp	.+20     	; 0x2d6 <LCDWriteInt+0x7e>
     2c2:	f8 01       	movw	r30, r16
     2c4:	81 91       	ld	r24, Z+
     2c6:	8f 01       	movw	r16, r30
     2c8:	61 e0       	ldi	r22, 0x01	; 1
     2ca:	80 5d       	subi	r24, 0xD0	; 208
     2cc:	5c df       	rcall	.-328    	; 0x186 <LCDByte>
     2ce:	0e 15       	cp	r16, r14
     2d0:	1f 05       	cpc	r17, r15
     2d2:	b9 f7       	brne	.-18     	; 0x2c2 <LCDWriteInt+0x6a>
     2d4:	11 c0       	rjmp	.+34     	; 0x2f8 <LCDWriteInt+0xa0>
     2d6:	05 30       	cpi	r16, 0x05	; 5
     2d8:	11 05       	cpc	r17, r1
     2da:	1c f0       	brlt	.+6      	; 0x2e2 <LCDWriteInt+0x8a>
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <LCDWriteInt+0xa0>
     2de:	00 e0       	ldi	r16, 0x00	; 0
     2e0:	10 e0       	ldi	r17, 0x00	; 0
     2e2:	81 e0       	ldi	r24, 0x01	; 1
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	8c 0f       	add	r24, r28
     2e8:	9d 1f       	adc	r25, r29
     2ea:	08 0f       	add	r16, r24
     2ec:	19 1f       	adc	r17, r25
     2ee:	7e 01       	movw	r14, r28
     2f0:	96 e0       	ldi	r25, 0x06	; 6
     2f2:	e9 0e       	add	r14, r25
     2f4:	f1 1c       	adc	r15, r1
     2f6:	e5 cf       	rjmp	.-54     	; 0x2c2 <LCDWriteInt+0x6a>
     2f8:	0f 90       	pop	r0
     2fa:	0f 90       	pop	r0
     2fc:	0f 90       	pop	r0
     2fe:	0f 90       	pop	r0
     300:	0f 90       	pop	r0
     302:	df 91       	pop	r29
     304:	cf 91       	pop	r28
     306:	1f 91       	pop	r17
     308:	0f 91       	pop	r16
     30a:	ff 90       	pop	r15
     30c:	ef 90       	pop	r14
     30e:	08 95       	ret

00000310 <LCDGotoXY>:
     310:	88 32       	cpi	r24, 0x28	; 40
     312:	28 f4       	brcc	.+10     	; 0x31e <LCDGotoXY+0xe>
     314:	61 11       	cpse	r22, r1
     316:	80 64       	ori	r24, 0x40	; 64
     318:	60 e0       	ldi	r22, 0x00	; 0
     31a:	80 68       	ori	r24, 0x80	; 128
     31c:	34 cf       	rjmp	.-408    	; 0x186 <LCDByte>
     31e:	08 95       	ret

00000320 <__vector_3>:
                curStep = 4;
                mTimer(tim);
            }
        }
    }
}
     320:	1f 92       	push	r1
     322:	0f 92       	push	r0
     324:	0f b6       	in	r0, 0x3f	; 63
     326:	0f 92       	push	r0
     328:	11 24       	eor	r1, r1
     32a:	0b b6       	in	r0, 0x3b	; 59
     32c:	0f 92       	push	r0
     32e:	8f 93       	push	r24
     330:	ef 93       	push	r30
     332:	ff 93       	push	r31
     334:	80 ec       	ldi	r24, 0xC0	; 192
     336:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
     33a:	4a 9b       	sbis	0x09, 2	; 9
     33c:	05 c0       	rjmp	.+10     	; 0x348 <__vector_3+0x28>
     33e:	ea e7       	ldi	r30, 0x7A	; 122
     340:	f0 e0       	ldi	r31, 0x00	; 0
     342:	80 81       	ld	r24, Z
     344:	80 64       	ori	r24, 0x40	; 64
     346:	80 83       	st	Z, r24
     348:	ff 91       	pop	r31
     34a:	ef 91       	pop	r30
     34c:	8f 91       	pop	r24
     34e:	0f 90       	pop	r0
     350:	0b be       	out	0x3b, r0	; 59
     352:	0f 90       	pop	r0
     354:	0f be       	out	0x3f, r0	; 63
     356:	0f 90       	pop	r0
     358:	1f 90       	pop	r1
     35a:	18 95       	reti

0000035c <__vector_default>:
     35c:	1f 92       	push	r1
     35e:	0f 92       	push	r0
     360:	0f b6       	in	r0, 0x3f	; 63
     362:	0f 92       	push	r0
     364:	11 24       	eor	r1, r1
     366:	8a ee       	ldi	r24, 0xEA	; 234
     368:	92 e0       	ldi	r25, 0x02	; 2
     36a:	67 df       	rcall	.-306    	; 0x23a <LCDWriteString>
     36c:	ff cf       	rjmp	.-2      	; 0x36c <__vector_default+0x10>

0000036e <__vector_29>:
     36e:	1f 92       	push	r1
     370:	0f 92       	push	r0
     372:	0f b6       	in	r0, 0x3f	; 63
     374:	0f 92       	push	r0
     376:	11 24       	eor	r1, r1
     378:	0b b6       	in	r0, 0x3b	; 59
     37a:	0f 92       	push	r0
     37c:	2f 93       	push	r18
     37e:	3f 93       	push	r19
     380:	8f 93       	push	r24
     382:	9f 93       	push	r25
     384:	ef 93       	push	r30
     386:	ff 93       	push	r31
     388:	4a 9b       	sbis	0x09, 2	; 9
     38a:	05 c0       	rjmp	.+10     	; 0x396 <__vector_29+0x28>
     38c:	ea e7       	ldi	r30, 0x7A	; 122
     38e:	f0 e0       	ldi	r31, 0x00	; 0
     390:	80 81       	ld	r24, Z
     392:	80 64       	ori	r24, 0x40	; 64
     394:	80 83       	st	Z, r24
     396:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
     39a:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
     39e:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <min>
     3a2:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <min+0x1>
     3a6:	82 17       	cp	r24, r18
     3a8:	93 07       	cpc	r25, r19
     3aa:	40 f0       	brcs	.+16     	; 0x3bc <__vector_29+0x4e>
     3ac:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
     3b0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
     3b4:	90 93 e7 02 	sts	0x02E7, r25	; 0x8002e7 <min+0x1>
     3b8:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <min>
     3bc:	ff 91       	pop	r31
     3be:	ef 91       	pop	r30
     3c0:	9f 91       	pop	r25
     3c2:	8f 91       	pop	r24
     3c4:	3f 91       	pop	r19
     3c6:	2f 91       	pop	r18
     3c8:	0f 90       	pop	r0
     3ca:	0b be       	out	0x3b, r0	; 59
     3cc:	0f 90       	pop	r0
     3ce:	0f be       	out	0x3f, r0	; 63
     3d0:	0f 90       	pop	r0
     3d2:	1f 90       	pop	r1
     3d4:	18 95       	reti

000003d6 <__vector_6>:
     3d6:	1f 92       	push	r1
     3d8:	0f 92       	push	r0
     3da:	0f b6       	in	r0, 0x3f	; 63
     3dc:	0f 92       	push	r0
     3de:	11 24       	eor	r1, r1
     3e0:	0b b6       	in	r0, 0x3b	; 59
     3e2:	0f 92       	push	r0
     3e4:	8f 93       	push	r24
     3e6:	9f 93       	push	r25
     3e8:	ef 93       	push	r30
     3ea:	ff 93       	push	r31
     3ec:	e1 e9       	ldi	r30, 0x91	; 145
     3ee:	f0 e0       	ldi	r31, 0x00	; 0
     3f0:	80 81       	ld	r24, Z
     3f2:	85 60       	ori	r24, 0x05	; 5
     3f4:	80 83       	st	Z, r24
     3f6:	80 81       	ld	r24, Z
     3f8:	88 60       	ori	r24, 0x08	; 8
     3fa:	80 83       	st	Z, r24
     3fc:	e1 e7       	ldi	r30, 0x71	; 113
     3fe:	f0 e0       	ldi	r31, 0x00	; 0
     400:	80 81       	ld	r24, Z
     402:	82 60       	ori	r24, 0x02	; 2
     404:	80 83       	st	Z, r24
     406:	8e e9       	ldi	r24, 0x9E	; 158
     408:	98 e9       	ldi	r25, 0x98	; 152
     40a:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
     40e:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
     412:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7c0095>
     416:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7c0094>
     41a:	ff 91       	pop	r31
     41c:	ef 91       	pop	r30
     41e:	9f 91       	pop	r25
     420:	8f 91       	pop	r24
     422:	0f 90       	pop	r0
     424:	0b be       	out	0x3b, r0	; 59
     426:	0f 90       	pop	r0
     428:	0f be       	out	0x3f, r0	; 63
     42a:	0f 90       	pop	r0
     42c:	1f 90       	pop	r1
     42e:	18 95       	reti

00000430 <__vector_32>:
     430:	1f 92       	push	r1
     432:	0f 92       	push	r0
     434:	0f b6       	in	r0, 0x3f	; 63
     436:	0f 92       	push	r0
     438:	11 24       	eor	r1, r1
     43a:	0b b6       	in	r0, 0x3b	; 59
     43c:	0f 92       	push	r0
     43e:	2f 93       	push	r18
     440:	3f 93       	push	r19
     442:	4f 93       	push	r20
     444:	5f 93       	push	r21
     446:	6f 93       	push	r22
     448:	7f 93       	push	r23
     44a:	8f 93       	push	r24
     44c:	9f 93       	push	r25
     44e:	af 93       	push	r26
     450:	bf 93       	push	r27
     452:	cf 93       	push	r28
     454:	ef 93       	push	r30
     456:	ff 93       	push	r31
     458:	cf e0       	ldi	r28, 0x0F	; 15
     45a:	c5 b9       	out	0x05, r28	; 5
     45c:	60 e0       	ldi	r22, 0x00	; 0
     45e:	81 e0       	ldi	r24, 0x01	; 1
     460:	92 de       	rcall	.-732    	; 0x186 <LCDByte>
     462:	60 e0       	ldi	r22, 0x00	; 0
     464:	80 e0       	ldi	r24, 0x00	; 0
     466:	54 df       	rcall	.-344    	; 0x310 <LCDGotoXY>
     468:	84 ef       	ldi	r24, 0xF4	; 244
     46a:	92 e0       	ldi	r25, 0x02	; 2
     46c:	e6 de       	rcall	.-564    	; 0x23a <LCDWriteString>
     46e:	80 91 14 03 	lds	r24, 0x0314	; 0x800314 <B_Sorted>
     472:	90 91 15 03 	lds	r25, 0x0315	; 0x800315 <B_Sorted+0x1>
     476:	63 e0       	ldi	r22, 0x03	; 3
     478:	70 e0       	ldi	r23, 0x00	; 0
     47a:	ee de       	rcall	.-548    	; 0x258 <LCDWriteInt>
     47c:	88 ef       	ldi	r24, 0xF8	; 248
     47e:	92 e0       	ldi	r25, 0x02	; 2
     480:	dc de       	rcall	.-584    	; 0x23a <LCDWriteString>
     482:	8c ef       	ldi	r24, 0xFC	; 252
     484:	92 e0       	ldi	r25, 0x02	; 2
     486:	d9 de       	rcall	.-590    	; 0x23a <LCDWriteString>
     488:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <A_Sorted>
     48c:	90 91 0d 04 	lds	r25, 0x040D	; 0x80040d <A_Sorted+0x1>
     490:	63 e0       	ldi	r22, 0x03	; 3
     492:	70 e0       	ldi	r23, 0x00	; 0
     494:	e1 de       	rcall	.-574    	; 0x258 <LCDWriteInt>
     496:	61 e0       	ldi	r22, 0x01	; 1
     498:	80 e0       	ldi	r24, 0x00	; 0
     49a:	3a df       	rcall	.-396    	; 0x310 <LCDGotoXY>
     49c:	80 e0       	ldi	r24, 0x00	; 0
     49e:	93 e0       	ldi	r25, 0x03	; 3
     4a0:	cc de       	rcall	.-616    	; 0x23a <LCDWriteString>
     4a2:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <W_Sorted>
     4a6:	90 91 11 04 	lds	r25, 0x0411	; 0x800411 <W_Sorted+0x1>
     4aa:	63 e0       	ldi	r22, 0x03	; 3
     4ac:	70 e0       	ldi	r23, 0x00	; 0
     4ae:	d4 de       	rcall	.-600    	; 0x258 <LCDWriteInt>
     4b0:	88 ef       	ldi	r24, 0xF8	; 248
     4b2:	92 e0       	ldi	r25, 0x02	; 2
     4b4:	c2 de       	rcall	.-636    	; 0x23a <LCDWriteString>
     4b6:	84 e0       	ldi	r24, 0x04	; 4
     4b8:	93 e0       	ldi	r25, 0x03	; 3
     4ba:	bf de       	rcall	.-642    	; 0x23a <LCDWriteString>
     4bc:	80 91 34 03 	lds	r24, 0x0334	; 0x800334 <S_Sorted>
     4c0:	90 91 35 03 	lds	r25, 0x0335	; 0x800335 <S_Sorted+0x1>
     4c4:	63 e0       	ldi	r22, 0x03	; 3
     4c6:	70 e0       	ldi	r23, 0x00	; 0
     4c8:	c7 de       	rcall	.-626    	; 0x258 <LCDWriteInt>
     4ca:	81 e0       	ldi	r24, 0x01	; 1
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <ramp_flag+0x1>
     4d2:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <ramp_flag>
     4d6:	c5 b9       	out	0x05, r28	; 5
     4d8:	ff 91       	pop	r31
     4da:	ef 91       	pop	r30
     4dc:	cf 91       	pop	r28
     4de:	bf 91       	pop	r27
     4e0:	af 91       	pop	r26
     4e2:	9f 91       	pop	r25
     4e4:	8f 91       	pop	r24
     4e6:	7f 91       	pop	r23
     4e8:	6f 91       	pop	r22
     4ea:	5f 91       	pop	r21
     4ec:	4f 91       	pop	r20
     4ee:	3f 91       	pop	r19
     4f0:	2f 91       	pop	r18
     4f2:	0f 90       	pop	r0
     4f4:	0b be       	out	0x3b, r0	; 59
     4f6:	0f 90       	pop	r0
     4f8:	0f be       	out	0x3f, r0	; 63
     4fa:	0f 90       	pop	r0
     4fc:	1f 90       	pop	r1
     4fe:	18 95       	reti

00000500 <initLink>:
     500:	cf 93       	push	r28
     502:	df 93       	push	r29
     504:	ec 01       	movw	r28, r24
     506:	84 e0       	ldi	r24, 0x04	; 4
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	2d d5       	rcall	.+2650   	; 0xf66 <malloc>
     50c:	99 83       	std	Y+1, r25	; 0x01
     50e:	88 83       	st	Y, r24
     510:	fc 01       	movw	r30, r24
     512:	13 82       	std	Z+3, r1	; 0x03
     514:	12 82       	std	Z+2, r1	; 0x02
     516:	df 91       	pop	r29
     518:	cf 91       	pop	r28
     51a:	08 95       	ret

0000051c <mTimer>:
     51c:	ac 01       	movw	r20, r24
     51e:	e1 e8       	ldi	r30, 0x81	; 129
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	90 81       	ld	r25, Z
     524:	98 60       	ori	r25, 0x08	; 8
     526:	90 83       	st	Z, r25
     528:	88 ee       	ldi	r24, 0xE8	; 232
     52a:	93 e0       	ldi	r25, 0x03	; 3
     52c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
     530:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
     534:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
     538:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
     53c:	b1 9a       	sbi	0x16, 1	; 22
     53e:	20 e0       	ldi	r18, 0x00	; 0
     540:	30 e0       	ldi	r19, 0x00	; 0
     542:	05 c0       	rjmp	.+10     	; 0x54e <mTimer+0x32>
     544:	b1 9b       	sbis	0x16, 1	; 22
     546:	fe cf       	rjmp	.-4      	; 0x544 <mTimer+0x28>
     548:	b1 9a       	sbi	0x16, 1	; 22
     54a:	2f 5f       	subi	r18, 0xFF	; 255
     54c:	3f 4f       	sbci	r19, 0xFF	; 255
     54e:	24 17       	cp	r18, r20
     550:	35 07       	cpc	r19, r21
     552:	1c f4       	brge	.+6      	; 0x55a <mTimer+0x3e>
     554:	b1 9b       	sbis	0x16, 1	; 22
     556:	f6 cf       	rjmp	.-20     	; 0x544 <mTimer+0x28>
     558:	f7 cf       	rjmp	.-18     	; 0x548 <mTimer+0x2c>
     55a:	08 95       	ret

0000055c <__vector_5>:
     55c:	1f 92       	push	r1
     55e:	0f 92       	push	r0
     560:	0f b6       	in	r0, 0x3f	; 63
     562:	0f 92       	push	r0
     564:	11 24       	eor	r1, r1
     566:	0b b6       	in	r0, 0x3b	; 59
     568:	0f 92       	push	r0
     56a:	2f 93       	push	r18
     56c:	3f 93       	push	r19
     56e:	4f 93       	push	r20
     570:	5f 93       	push	r21
     572:	6f 93       	push	r22
     574:	7f 93       	push	r23
     576:	8f 93       	push	r24
     578:	9f 93       	push	r25
     57a:	af 93       	push	r26
     57c:	bf 93       	push	r27
     57e:	ef 93       	push	r30
     580:	ff 93       	push	r31
     582:	64 9b       	sbis	0x0c, 4	; 12
     584:	ad c0       	rjmp	.+346    	; 0x6e0 <__vector_5+0x184>
     586:	8a e0       	ldi	r24, 0x0A	; 10
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	c8 df       	rcall	.-112    	; 0x51c <mTimer>
     58c:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <state_Flag>
     590:	90 91 e9 02 	lds	r25, 0x02E9	; 0x8002e9 <state_Flag+0x1>
     594:	89 2b       	or	r24, r25
     596:	09 f4       	brne	.+2      	; 0x59a <__vector_5+0x3e>
     598:	90 c0       	rjmp	.+288    	; 0x6ba <__vector_5+0x15e>
     59a:	10 92 e9 02 	sts	0x02E9, r1	; 0x8002e9 <state_Flag+0x1>
     59e:	10 92 e8 02 	sts	0x02E8, r1	; 0x8002e8 <state_Flag>
     5a2:	84 e1       	ldi	r24, 0x14	; 20
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	ba df       	rcall	.-140    	; 0x51c <mTimer>
     5a8:	8f e0       	ldi	r24, 0x0F	; 15
     5aa:	85 b9       	out	0x05, r24	; 5
     5ac:	8a e0       	ldi	r24, 0x0A	; 10
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	b5 df       	rcall	.-150    	; 0x51c <mTimer>
     5b2:	60 e0       	ldi	r22, 0x00	; 0
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	e7 dd       	rcall	.-1074   	; 0x186 <LCDByte>
     5b8:	60 e0       	ldi	r22, 0x00	; 0
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	a9 de       	rcall	.-686    	; 0x310 <LCDGotoXY>
     5be:	84 ef       	ldi	r24, 0xF4	; 244
     5c0:	92 e0       	ldi	r25, 0x02	; 2
     5c2:	3b de       	rcall	.-906    	; 0x23a <LCDWriteString>
     5c4:	60 e0       	ldi	r22, 0x00	; 0
     5c6:	83 e0       	ldi	r24, 0x03	; 3
     5c8:	a3 de       	rcall	.-698    	; 0x310 <LCDGotoXY>
     5ca:	80 91 14 03 	lds	r24, 0x0314	; 0x800314 <B_Sorted>
     5ce:	90 91 15 03 	lds	r25, 0x0315	; 0x800315 <B_Sorted+0x1>
     5d2:	62 e0       	ldi	r22, 0x02	; 2
     5d4:	70 e0       	ldi	r23, 0x00	; 0
     5d6:	40 de       	rcall	.-896    	; 0x258 <LCDWriteInt>
     5d8:	60 e0       	ldi	r22, 0x00	; 0
     5da:	85 e0       	ldi	r24, 0x05	; 5
     5dc:	99 de       	rcall	.-718    	; 0x310 <LCDGotoXY>
     5de:	80 91 20 03 	lds	r24, 0x0320	; 0x800320 <B_Total>
     5e2:	90 91 21 03 	lds	r25, 0x0321	; 0x800321 <B_Total+0x1>
     5e6:	20 91 14 03 	lds	r18, 0x0314	; 0x800314 <B_Sorted>
     5ea:	30 91 15 03 	lds	r19, 0x0315	; 0x800315 <B_Sorted+0x1>
     5ee:	62 e0       	ldi	r22, 0x02	; 2
     5f0:	70 e0       	ldi	r23, 0x00	; 0
     5f2:	82 1b       	sub	r24, r18
     5f4:	93 0b       	sbc	r25, r19
     5f6:	30 de       	rcall	.-928    	; 0x258 <LCDWriteInt>
     5f8:	8a ef       	ldi	r24, 0xFA	; 250
     5fa:	92 e0       	ldi	r25, 0x02	; 2
     5fc:	1e de       	rcall	.-964    	; 0x23a <LCDWriteString>
     5fe:	8c ef       	ldi	r24, 0xFC	; 252
     600:	92 e0       	ldi	r25, 0x02	; 2
     602:	1b de       	rcall	.-970    	; 0x23a <LCDWriteString>
     604:	60 e0       	ldi	r22, 0x00	; 0
     606:	8b e0       	ldi	r24, 0x0B	; 11
     608:	83 de       	rcall	.-762    	; 0x310 <LCDGotoXY>
     60a:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <A_Sorted>
     60e:	90 91 0d 04 	lds	r25, 0x040D	; 0x80040d <A_Sorted+0x1>
     612:	62 e0       	ldi	r22, 0x02	; 2
     614:	70 e0       	ldi	r23, 0x00	; 0
     616:	20 de       	rcall	.-960    	; 0x258 <LCDWriteInt>
     618:	60 e0       	ldi	r22, 0x00	; 0
     61a:	8d e0       	ldi	r24, 0x0D	; 13
     61c:	79 de       	rcall	.-782    	; 0x310 <LCDGotoXY>
     61e:	80 91 12 03 	lds	r24, 0x0312	; 0x800312 <A_Total>
     622:	90 91 13 03 	lds	r25, 0x0313	; 0x800313 <A_Total+0x1>
     626:	20 91 0c 04 	lds	r18, 0x040C	; 0x80040c <A_Sorted>
     62a:	30 91 0d 04 	lds	r19, 0x040D	; 0x80040d <A_Sorted+0x1>
     62e:	62 e0       	ldi	r22, 0x02	; 2
     630:	70 e0       	ldi	r23, 0x00	; 0
     632:	82 1b       	sub	r24, r18
     634:	93 0b       	sbc	r25, r19
     636:	10 de       	rcall	.-992    	; 0x258 <LCDWriteInt>
     638:	61 e0       	ldi	r22, 0x01	; 1
     63a:	80 e0       	ldi	r24, 0x00	; 0
     63c:	69 de       	rcall	.-814    	; 0x310 <LCDGotoXY>
     63e:	80 e0       	ldi	r24, 0x00	; 0
     640:	93 e0       	ldi	r25, 0x03	; 3
     642:	fb dd       	rcall	.-1034   	; 0x23a <LCDWriteString>
     644:	61 e0       	ldi	r22, 0x01	; 1
     646:	83 e0       	ldi	r24, 0x03	; 3
     648:	63 de       	rcall	.-826    	; 0x310 <LCDGotoXY>
     64a:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <W_Sorted>
     64e:	90 91 11 04 	lds	r25, 0x0411	; 0x800411 <W_Sorted+0x1>
     652:	62 e0       	ldi	r22, 0x02	; 2
     654:	70 e0       	ldi	r23, 0x00	; 0
     656:	00 de       	rcall	.-1024   	; 0x258 <LCDWriteInt>
     658:	61 e0       	ldi	r22, 0x01	; 1
     65a:	85 e0       	ldi	r24, 0x05	; 5
     65c:	59 de       	rcall	.-846    	; 0x310 <LCDGotoXY>
     65e:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <W_Total>
     662:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <W_Total+0x1>
     666:	20 91 10 04 	lds	r18, 0x0410	; 0x800410 <W_Sorted>
     66a:	30 91 11 04 	lds	r19, 0x0411	; 0x800411 <W_Sorted+0x1>
     66e:	62 e0       	ldi	r22, 0x02	; 2
     670:	70 e0       	ldi	r23, 0x00	; 0
     672:	82 1b       	sub	r24, r18
     674:	93 0b       	sbc	r25, r19
     676:	f0 dd       	rcall	.-1056   	; 0x258 <LCDWriteInt>
     678:	8a ef       	ldi	r24, 0xFA	; 250
     67a:	92 e0       	ldi	r25, 0x02	; 2
     67c:	de dd       	rcall	.-1092   	; 0x23a <LCDWriteString>
     67e:	84 e0       	ldi	r24, 0x04	; 4
     680:	93 e0       	ldi	r25, 0x03	; 3
     682:	db dd       	rcall	.-1098   	; 0x23a <LCDWriteString>
     684:	61 e0       	ldi	r22, 0x01	; 1
     686:	8b e0       	ldi	r24, 0x0B	; 11
     688:	43 de       	rcall	.-890    	; 0x310 <LCDGotoXY>
     68a:	80 91 34 03 	lds	r24, 0x0334	; 0x800334 <S_Sorted>
     68e:	90 91 35 03 	lds	r25, 0x0335	; 0x800335 <S_Sorted+0x1>
     692:	62 e0       	ldi	r22, 0x02	; 2
     694:	70 e0       	ldi	r23, 0x00	; 0
     696:	e0 dd       	rcall	.-1088   	; 0x258 <LCDWriteInt>
     698:	61 e0       	ldi	r22, 0x01	; 1
     69a:	8d e0       	ldi	r24, 0x0D	; 13
     69c:	39 de       	rcall	.-910    	; 0x310 <LCDGotoXY>
     69e:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <S_Total>
     6a2:	90 91 2b 03 	lds	r25, 0x032B	; 0x80032b <S_Total+0x1>
     6a6:	20 91 34 03 	lds	r18, 0x0334	; 0x800334 <S_Sorted>
     6aa:	30 91 35 03 	lds	r19, 0x0335	; 0x800335 <S_Sorted+0x1>
     6ae:	62 e0       	ldi	r22, 0x02	; 2
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	82 1b       	sub	r24, r18
     6b4:	93 0b       	sbc	r25, r19
     6b6:	d0 dd       	rcall	.-1120   	; 0x258 <LCDWriteInt>
     6b8:	0e c0       	rjmp	.+28     	; 0x6d6 <__vector_5+0x17a>
     6ba:	81 e0       	ldi	r24, 0x01	; 1
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	90 93 e9 02 	sts	0x02E9, r25	; 0x8002e9 <state_Flag+0x1>
     6c2:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <state_Flag>
     6c6:	84 e1       	ldi	r24, 0x14	; 20
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	28 df       	rcall	.-432    	; 0x51c <mTimer>
     6cc:	87 e0       	ldi	r24, 0x07	; 7
     6ce:	85 b9       	out	0x05, r24	; 5
     6d0:	8a e0       	ldi	r24, 0x0A	; 10
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	23 df       	rcall	.-442    	; 0x51c <mTimer>
     6d6:	64 99       	sbic	0x0c, 4	; 12
     6d8:	fe cf       	rjmp	.-4      	; 0x6d6 <__vector_5+0x17a>
     6da:	84 e1       	ldi	r24, 0x14	; 20
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	1e df       	rcall	.-452    	; 0x51c <mTimer>
     6e0:	ff 91       	pop	r31
     6e2:	ef 91       	pop	r30
     6e4:	bf 91       	pop	r27
     6e6:	af 91       	pop	r26
     6e8:	9f 91       	pop	r25
     6ea:	8f 91       	pop	r24
     6ec:	7f 91       	pop	r23
     6ee:	6f 91       	pop	r22
     6f0:	5f 91       	pop	r21
     6f2:	4f 91       	pop	r20
     6f4:	3f 91       	pop	r19
     6f6:	2f 91       	pop	r18
     6f8:	0f 90       	pop	r0
     6fa:	0b be       	out	0x3b, r0	; 59
     6fc:	0f 90       	pop	r0
     6fe:	0f be       	out	0x3f, r0	; 63
     700:	0f 90       	pop	r0
     702:	1f 90       	pop	r1
     704:	18 95       	reti

00000706 <Rota_CW>:
     706:	8f 92       	push	r8
     708:	9f 92       	push	r9
     70a:	af 92       	push	r10
     70c:	bf 92       	push	r11
     70e:	cf 92       	push	r12
     710:	df 92       	push	r13
     712:	ef 92       	push	r14
     714:	ff 92       	push	r15
     716:	0f 93       	push	r16
     718:	1f 93       	push	r17
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
     71e:	18 16       	cp	r1, r24
     720:	19 06       	cpc	r1, r25
     722:	0c f0       	brlt	.+2      	; 0x726 <Rota_CW+0x20>
     724:	72 c0       	rjmp	.+228    	; 0x80a <Rota_CW+0x104>
     726:	8c 01       	movw	r16, r24
     728:	c0 e0       	ldi	r28, 0x00	; 0
     72a:	d0 e0       	ldi	r29, 0x00	; 0
     72c:	c1 2c       	mov	r12, r1
     72e:	d1 2c       	mov	r13, r1
     730:	0f 2e       	mov	r0, r31
     732:	f5 e3       	ldi	r31, 0x35	; 53
     734:	8f 2e       	mov	r8, r31
     736:	f0 2d       	mov	r31, r0
     738:	0f 2e       	mov	r0, r31
     73a:	f6 e3       	ldi	r31, 0x36	; 54
     73c:	9f 2e       	mov	r9, r31
     73e:	f0 2d       	mov	r31, r0
     740:	0f 2e       	mov	r0, r31
     742:	fe e2       	ldi	r31, 0x2E	; 46
     744:	af 2e       	mov	r10, r31
     746:	f0 2d       	mov	r31, r0
     748:	0f 2e       	mov	r0, r31
     74a:	fd e2       	ldi	r31, 0x2D	; 45
     74c:	bf 2e       	mov	r11, r31
     74e:	f0 2d       	mov	r31, r0
     750:	ee 24       	eor	r14, r14
     752:	e3 94       	inc	r14
     754:	f1 2c       	mov	r15, r1
     756:	20 91 28 03 	lds	r18, 0x0328	; 0x800328 <stepnumber>
     75a:	30 91 29 03 	lds	r19, 0x0329	; 0x800329 <stepnumber+0x1>
     75e:	2f 5f       	subi	r18, 0xFF	; 255
     760:	3f 4f       	sbci	r19, 0xFF	; 255
     762:	30 93 29 03 	sts	0x0329, r19	; 0x800329 <stepnumber+0x1>
     766:	20 93 28 03 	sts	0x0328, r18	; 0x800328 <stepnumber>
     76a:	25 30       	cpi	r18, 0x05	; 5
     76c:	31 05       	cpc	r19, r1
     76e:	29 f4       	brne	.+10     	; 0x77a <Rota_CW+0x74>
     770:	f0 92 29 03 	sts	0x0329, r15	; 0x800329 <stepnumber+0x1>
     774:	e0 92 28 03 	sts	0x0328, r14	; 0x800328 <stepnumber>
     778:	10 c0       	rjmp	.+32     	; 0x79a <Rota_CW+0x94>
     77a:	22 30       	cpi	r18, 0x02	; 2
     77c:	31 05       	cpc	r19, r1
     77e:	d1 f0       	breq	.+52     	; 0x7b4 <Rota_CW+0xae>
     780:	2c f4       	brge	.+10     	; 0x78c <Rota_CW+0x86>
     782:	21 30       	cpi	r18, 0x01	; 1
     784:	31 05       	cpc	r19, r1
     786:	09 f0       	breq	.+2      	; 0x78a <Rota_CW+0x84>
     788:	3b c0       	rjmp	.+118    	; 0x800 <Rota_CW+0xfa>
     78a:	07 c0       	rjmp	.+14     	; 0x79a <Rota_CW+0x94>
     78c:	23 30       	cpi	r18, 0x03	; 3
     78e:	31 05       	cpc	r19, r1
     790:	f1 f0       	breq	.+60     	; 0x7ce <Rota_CW+0xc8>
     792:	24 30       	cpi	r18, 0x04	; 4
     794:	31 05       	cpc	r19, r1
     796:	41 f1       	breq	.+80     	; 0x7e8 <Rota_CW+0xe2>
     798:	33 c0       	rjmp	.+102    	; 0x800 <Rota_CW+0xfa>
     79a:	82 b8       	out	0x02, r8	; 2
     79c:	f6 01       	movw	r30, r12
     79e:	ee 0f       	add	r30, r30
     7a0:	ff 1f       	adc	r31, r31
     7a2:	ea 5f       	subi	r30, 0xFA	; 250
     7a4:	fd 4f       	sbci	r31, 0xFD	; 253
     7a6:	80 81       	ld	r24, Z
     7a8:	91 81       	ldd	r25, Z+1	; 0x01
     7aa:	b8 de       	rcall	.-656    	; 0x51c <mTimer>
     7ac:	8f ef       	ldi	r24, 0xFF	; 255
     7ae:	c8 1a       	sub	r12, r24
     7b0:	d8 0a       	sbc	r13, r24
     7b2:	26 c0       	rjmp	.+76     	; 0x800 <Rota_CW+0xfa>
     7b4:	92 b8       	out	0x02, r9	; 2
     7b6:	f6 01       	movw	r30, r12
     7b8:	ee 0f       	add	r30, r30
     7ba:	ff 1f       	adc	r31, r31
     7bc:	ea 5f       	subi	r30, 0xFA	; 250
     7be:	fd 4f       	sbci	r31, 0xFD	; 253
     7c0:	80 81       	ld	r24, Z
     7c2:	91 81       	ldd	r25, Z+1	; 0x01
     7c4:	ab de       	rcall	.-682    	; 0x51c <mTimer>
     7c6:	8f ef       	ldi	r24, 0xFF	; 255
     7c8:	c8 1a       	sub	r12, r24
     7ca:	d8 0a       	sbc	r13, r24
     7cc:	19 c0       	rjmp	.+50     	; 0x800 <Rota_CW+0xfa>
     7ce:	a2 b8       	out	0x02, r10	; 2
     7d0:	f6 01       	movw	r30, r12
     7d2:	ee 0f       	add	r30, r30
     7d4:	ff 1f       	adc	r31, r31
     7d6:	ea 5f       	subi	r30, 0xFA	; 250
     7d8:	fd 4f       	sbci	r31, 0xFD	; 253
     7da:	80 81       	ld	r24, Z
     7dc:	91 81       	ldd	r25, Z+1	; 0x01
     7de:	9e de       	rcall	.-708    	; 0x51c <mTimer>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	c8 1a       	sub	r12, r24
     7e4:	d8 0a       	sbc	r13, r24
     7e6:	0c c0       	rjmp	.+24     	; 0x800 <Rota_CW+0xfa>
     7e8:	b2 b8       	out	0x02, r11	; 2
     7ea:	f6 01       	movw	r30, r12
     7ec:	ee 0f       	add	r30, r30
     7ee:	ff 1f       	adc	r31, r31
     7f0:	ea 5f       	subi	r30, 0xFA	; 250
     7f2:	fd 4f       	sbci	r31, 0xFD	; 253
     7f4:	80 81       	ld	r24, Z
     7f6:	91 81       	ldd	r25, Z+1	; 0x01
     7f8:	91 de       	rcall	.-734    	; 0x51c <mTimer>
     7fa:	8f ef       	ldi	r24, 0xFF	; 255
     7fc:	c8 1a       	sub	r12, r24
     7fe:	d8 0a       	sbc	r13, r24
     800:	21 96       	adiw	r28, 0x01	; 1
     802:	0c 17       	cp	r16, r28
     804:	1d 07       	cpc	r17, r29
     806:	09 f0       	breq	.+2      	; 0x80a <Rota_CW+0x104>
     808:	a6 cf       	rjmp	.-180    	; 0x756 <Rota_CW+0x50>
     80a:	df 91       	pop	r29
     80c:	cf 91       	pop	r28
     80e:	1f 91       	pop	r17
     810:	0f 91       	pop	r16
     812:	ff 90       	pop	r15
     814:	ef 90       	pop	r14
     816:	df 90       	pop	r13
     818:	cf 90       	pop	r12
     81a:	bf 90       	pop	r11
     81c:	af 90       	pop	r10
     81e:	9f 90       	pop	r9
     820:	8f 90       	pop	r8
     822:	08 95       	ret

00000824 <Rota_CCW>:
     824:	8f 92       	push	r8
     826:	9f 92       	push	r9
     828:	af 92       	push	r10
     82a:	bf 92       	push	r11
     82c:	cf 92       	push	r12
     82e:	df 92       	push	r13
     830:	ef 92       	push	r14
     832:	ff 92       	push	r15
     834:	0f 93       	push	r16
     836:	1f 93       	push	r17
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	18 16       	cp	r1, r24
     83e:	19 06       	cpc	r1, r25
     840:	0c f0       	brlt	.+2      	; 0x844 <Rota_CCW+0x20>
     842:	72 c0       	rjmp	.+228    	; 0x928 <Rota_CCW+0x104>
     844:	8c 01       	movw	r16, r24
     846:	c0 e0       	ldi	r28, 0x00	; 0
     848:	d0 e0       	ldi	r29, 0x00	; 0
     84a:	c1 2c       	mov	r12, r1
     84c:	d1 2c       	mov	r13, r1
     84e:	0f 2e       	mov	r0, r31
     850:	fd e2       	ldi	r31, 0x2D	; 45
     852:	8f 2e       	mov	r8, r31
     854:	f0 2d       	mov	r31, r0
     856:	0f 2e       	mov	r0, r31
     858:	f6 e3       	ldi	r31, 0x36	; 54
     85a:	9f 2e       	mov	r9, r31
     85c:	f0 2d       	mov	r31, r0
     85e:	0f 2e       	mov	r0, r31
     860:	fe e2       	ldi	r31, 0x2E	; 46
     862:	af 2e       	mov	r10, r31
     864:	f0 2d       	mov	r31, r0
     866:	0f 2e       	mov	r0, r31
     868:	f5 e3       	ldi	r31, 0x35	; 53
     86a:	bf 2e       	mov	r11, r31
     86c:	f0 2d       	mov	r31, r0
     86e:	68 94       	set
     870:	ee 24       	eor	r14, r14
     872:	e2 f8       	bld	r14, 2
     874:	f1 2c       	mov	r15, r1
     876:	20 91 28 03 	lds	r18, 0x0328	; 0x800328 <stepnumber>
     87a:	30 91 29 03 	lds	r19, 0x0329	; 0x800329 <stepnumber+0x1>
     87e:	21 50       	subi	r18, 0x01	; 1
     880:	31 09       	sbc	r19, r1
     882:	30 93 29 03 	sts	0x0329, r19	; 0x800329 <stepnumber+0x1>
     886:	20 93 28 03 	sts	0x0328, r18	; 0x800328 <stepnumber>
     88a:	12 16       	cp	r1, r18
     88c:	13 06       	cpc	r1, r19
     88e:	2c f0       	brlt	.+10     	; 0x89a <Rota_CCW+0x76>
     890:	f0 92 29 03 	sts	0x0329, r15	; 0x800329 <stepnumber+0x1>
     894:	e0 92 28 03 	sts	0x0328, r14	; 0x800328 <stepnumber>
     898:	36 c0       	rjmp	.+108    	; 0x906 <Rota_CCW+0xe2>
     89a:	22 30       	cpi	r18, 0x02	; 2
     89c:	31 05       	cpc	r19, r1
     89e:	c9 f0       	breq	.+50     	; 0x8d2 <Rota_CCW+0xae>
     8a0:	24 f4       	brge	.+8      	; 0x8aa <Rota_CCW+0x86>
     8a2:	21 30       	cpi	r18, 0x01	; 1
     8a4:	31 05       	cpc	r19, r1
     8a6:	41 f0       	breq	.+16     	; 0x8b8 <Rota_CCW+0x94>
     8a8:	3a c0       	rjmp	.+116    	; 0x91e <Rota_CCW+0xfa>
     8aa:	23 30       	cpi	r18, 0x03	; 3
     8ac:	31 05       	cpc	r19, r1
     8ae:	f1 f0       	breq	.+60     	; 0x8ec <Rota_CCW+0xc8>
     8b0:	24 30       	cpi	r18, 0x04	; 4
     8b2:	31 05       	cpc	r19, r1
     8b4:	a1 f5       	brne	.+104    	; 0x91e <Rota_CCW+0xfa>
     8b6:	27 c0       	rjmp	.+78     	; 0x906 <Rota_CCW+0xe2>
     8b8:	b2 b8       	out	0x02, r11	; 2
     8ba:	f6 01       	movw	r30, r12
     8bc:	ee 0f       	add	r30, r30
     8be:	ff 1f       	adc	r31, r31
     8c0:	ea 5f       	subi	r30, 0xFA	; 250
     8c2:	fd 4f       	sbci	r31, 0xFD	; 253
     8c4:	80 81       	ld	r24, Z
     8c6:	91 81       	ldd	r25, Z+1	; 0x01
     8c8:	29 de       	rcall	.-942    	; 0x51c <mTimer>
     8ca:	8f ef       	ldi	r24, 0xFF	; 255
     8cc:	c8 1a       	sub	r12, r24
     8ce:	d8 0a       	sbc	r13, r24
     8d0:	26 c0       	rjmp	.+76     	; 0x91e <Rota_CCW+0xfa>
     8d2:	92 b8       	out	0x02, r9	; 2
     8d4:	f6 01       	movw	r30, r12
     8d6:	ee 0f       	add	r30, r30
     8d8:	ff 1f       	adc	r31, r31
     8da:	ea 5f       	subi	r30, 0xFA	; 250
     8dc:	fd 4f       	sbci	r31, 0xFD	; 253
     8de:	80 81       	ld	r24, Z
     8e0:	91 81       	ldd	r25, Z+1	; 0x01
     8e2:	1c de       	rcall	.-968    	; 0x51c <mTimer>
     8e4:	8f ef       	ldi	r24, 0xFF	; 255
     8e6:	c8 1a       	sub	r12, r24
     8e8:	d8 0a       	sbc	r13, r24
     8ea:	19 c0       	rjmp	.+50     	; 0x91e <Rota_CCW+0xfa>
     8ec:	a2 b8       	out	0x02, r10	; 2
     8ee:	f6 01       	movw	r30, r12
     8f0:	ee 0f       	add	r30, r30
     8f2:	ff 1f       	adc	r31, r31
     8f4:	ea 5f       	subi	r30, 0xFA	; 250
     8f6:	fd 4f       	sbci	r31, 0xFD	; 253
     8f8:	80 81       	ld	r24, Z
     8fa:	91 81       	ldd	r25, Z+1	; 0x01
     8fc:	0f de       	rcall	.-994    	; 0x51c <mTimer>
     8fe:	8f ef       	ldi	r24, 0xFF	; 255
     900:	c8 1a       	sub	r12, r24
     902:	d8 0a       	sbc	r13, r24
     904:	0c c0       	rjmp	.+24     	; 0x91e <Rota_CCW+0xfa>
     906:	82 b8       	out	0x02, r8	; 2
     908:	f6 01       	movw	r30, r12
     90a:	ee 0f       	add	r30, r30
     90c:	ff 1f       	adc	r31, r31
     90e:	ea 5f       	subi	r30, 0xFA	; 250
     910:	fd 4f       	sbci	r31, 0xFD	; 253
     912:	80 81       	ld	r24, Z
     914:	91 81       	ldd	r25, Z+1	; 0x01
     916:	02 de       	rcall	.-1020   	; 0x51c <mTimer>
     918:	8f ef       	ldi	r24, 0xFF	; 255
     91a:	c8 1a       	sub	r12, r24
     91c:	d8 0a       	sbc	r13, r24
     91e:	21 96       	adiw	r28, 0x01	; 1
     920:	0c 17       	cp	r16, r28
     922:	1d 07       	cpc	r17, r29
     924:	09 f0       	breq	.+2      	; 0x928 <Rota_CCW+0x104>
     926:	a7 cf       	rjmp	.-178    	; 0x876 <Rota_CCW+0x52>
     928:	df 91       	pop	r29
     92a:	cf 91       	pop	r28
     92c:	1f 91       	pop	r17
     92e:	0f 91       	pop	r16
     930:	ff 90       	pop	r15
     932:	ef 90       	pop	r14
     934:	df 90       	pop	r13
     936:	cf 90       	pop	r12
     938:	bf 90       	pop	r11
     93a:	af 90       	pop	r10
     93c:	9f 90       	pop	r9
     93e:	8f 90       	pop	r8
     940:	08 95       	ret

00000942 <__vector_4>:
     942:	1f 92       	push	r1
     944:	0f 92       	push	r0
     946:	0f b6       	in	r0, 0x3f	; 63
     948:	0f 92       	push	r0
     94a:	11 24       	eor	r1, r1
     94c:	0b b6       	in	r0, 0x3b	; 59
     94e:	0f 92       	push	r0
     950:	2f 93       	push	r18
     952:	3f 93       	push	r19
     954:	4f 93       	push	r20
     956:	5f 93       	push	r21
     958:	6f 93       	push	r22
     95a:	7f 93       	push	r23
     95c:	8f 93       	push	r24
     95e:	9f 93       	push	r25
     960:	af 93       	push	r26
     962:	bf 93       	push	r27
     964:	cf 93       	push	r28
     966:	df 93       	push	r29
     968:	ef 93       	push	r30
     96a:	ff 93       	push	r31
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <del_Q_flag+0x1>
     974:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <del_Q_flag>
     978:	80 e3       	ldi	r24, 0x30	; 48
     97a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
     97e:	8f e0       	ldi	r24, 0x0F	; 15
     980:	85 b9       	out	0x05, r24	; 5
     982:	84 e1       	ldi	r24, 0x14	; 20
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	ca dd       	rcall	.-1132   	; 0x51c <mTimer>
     988:	e0 91 0a 03 	lds	r30, 0x030A	; 0x80030a <count3>
     98c:	f0 91 0b 03 	lds	r31, 0x030B	; 0x80030b <count3+0x1>
     990:	ee 0f       	add	r30, r30
     992:	ff 1f       	adc	r31, r31
     994:	ec 5b       	subi	r30, 0xBC	; 188
     996:	fc 4f       	sbci	r31, 0xFC	; 252
     998:	80 81       	ld	r24, Z
     99a:	91 81       	ldd	r25, Z+1	; 0x01
     99c:	90 93 3b 03 	sts	0x033B, r25	; 0x80033b <futPos+0x1>
     9a0:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <futPos>
     9a4:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <futPos>
     9a8:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <futPos+0x1>
     9ac:	20 91 10 03 	lds	r18, 0x0310	; 0x800310 <curPos>
     9b0:	30 91 11 03 	lds	r19, 0x0311	; 0x800311 <curPos+0x1>
     9b4:	82 1b       	sub	r24, r18
     9b6:	93 0b       	sbc	r25, r19
     9b8:	90 93 0f 03 	sts	0x030F, r25	; 0x80030f <rotate_check+0x1>
     9bc:	80 93 0e 03 	sts	0x030E, r24	; 0x80030e <rotate_check>
     9c0:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <futPos>
     9c4:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <futPos+0x1>
     9c8:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <curPos+0x1>
     9cc:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <curPos>
     9d0:	80 91 0e 03 	lds	r24, 0x030E	; 0x80030e <rotate_check>
     9d4:	90 91 0f 03 	lds	r25, 0x030F	; 0x80030f <rotate_check+0x1>
     9d8:	02 97       	sbiw	r24, 0x02	; 2
     9da:	31 f0       	breq	.+12     	; 0x9e8 <__vector_4+0xa6>
     9dc:	80 91 0e 03 	lds	r24, 0x030E	; 0x80030e <rotate_check>
     9e0:	90 91 0f 03 	lds	r25, 0x030F	; 0x80030f <rotate_check+0x1>
     9e4:	02 96       	adiw	r24, 0x02	; 2
     9e6:	21 f4       	brne	.+8      	; 0x9f0 <__vector_4+0xae>
     9e8:	84 e6       	ldi	r24, 0x64	; 100
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	8c de       	rcall	.-744    	; 0x706 <Rota_CW>
     9ee:	1f c0       	rjmp	.+62     	; 0xa2e <__vector_4+0xec>
     9f0:	80 91 0e 03 	lds	r24, 0x030E	; 0x80030e <rotate_check>
     9f4:	90 91 0f 03 	lds	r25, 0x030F	; 0x80030f <rotate_check+0x1>
     9f8:	01 97       	sbiw	r24, 0x01	; 1
     9fa:	31 f0       	breq	.+12     	; 0xa08 <__vector_4+0xc6>
     9fc:	80 91 0e 03 	lds	r24, 0x030E	; 0x80030e <rotate_check>
     a00:	90 91 0f 03 	lds	r25, 0x030F	; 0x80030f <rotate_check+0x1>
     a04:	03 96       	adiw	r24, 0x03	; 3
     a06:	21 f4       	brne	.+8      	; 0xa10 <__vector_4+0xce>
     a08:	82 e3       	ldi	r24, 0x32	; 50
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	7c de       	rcall	.-776    	; 0x706 <Rota_CW>
     a0e:	0f c0       	rjmp	.+30     	; 0xa2e <__vector_4+0xec>
     a10:	80 91 0e 03 	lds	r24, 0x030E	; 0x80030e <rotate_check>
     a14:	90 91 0f 03 	lds	r25, 0x030F	; 0x80030f <rotate_check+0x1>
     a18:	01 96       	adiw	r24, 0x01	; 1
     a1a:	31 f0       	breq	.+12     	; 0xa28 <__vector_4+0xe6>
     a1c:	80 91 0e 03 	lds	r24, 0x030E	; 0x80030e <rotate_check>
     a20:	90 91 0f 03 	lds	r25, 0x030F	; 0x80030f <rotate_check+0x1>
     a24:	03 97       	sbiw	r24, 0x03	; 3
     a26:	19 f4       	brne	.+6      	; 0xa2e <__vector_4+0xec>
     a28:	82 e3       	ldi	r24, 0x32	; 50
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	fb de       	rcall	.-522    	; 0x824 <Rota_CCW>
     a2e:	60 e0       	ldi	r22, 0x00	; 0
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	a9 db       	rcall	.-2222   	; 0x186 <LCDByte>
     a34:	60 e0       	ldi	r22, 0x00	; 0
     a36:	80 e0       	ldi	r24, 0x00	; 0
     a38:	6b dc       	rcall	.-1834   	; 0x310 <LCDGotoXY>
     a3a:	c4 e4       	ldi	r28, 0x44	; 68
     a3c:	d3 e0       	ldi	r29, 0x03	; 3
     a3e:	88 81       	ld	r24, Y
     a40:	99 81       	ldd	r25, Y+1	; 0x01
     a42:	64 e0       	ldi	r22, 0x04	; 4
     a44:	70 e0       	ldi	r23, 0x00	; 0
     a46:	08 dc       	rcall	.-2032   	; 0x258 <LCDWriteInt>
     a48:	60 e0       	ldi	r22, 0x00	; 0
     a4a:	86 e0       	ldi	r24, 0x06	; 6
     a4c:	61 dc       	rcall	.-1854   	; 0x310 <LCDGotoXY>
     a4e:	8a 81       	ldd	r24, Y+2	; 0x02
     a50:	9b 81       	ldd	r25, Y+3	; 0x03
     a52:	64 e0       	ldi	r22, 0x04	; 4
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	00 dc       	rcall	.-2048   	; 0x258 <LCDWriteInt>
     a58:	61 e0       	ldi	r22, 0x01	; 1
     a5a:	80 e0       	ldi	r24, 0x00	; 0
     a5c:	59 dc       	rcall	.-1870   	; 0x310 <LCDGotoXY>
     a5e:	8c 81       	ldd	r24, Y+4	; 0x04
     a60:	9d 81       	ldd	r25, Y+5	; 0x05
     a62:	64 e0       	ldi	r22, 0x04	; 4
     a64:	70 e0       	ldi	r23, 0x00	; 0
     a66:	f8 db       	rcall	.-2064   	; 0x258 <LCDWriteInt>
     a68:	61 e0       	ldi	r22, 0x01	; 1
     a6a:	86 e0       	ldi	r24, 0x06	; 6
     a6c:	51 dc       	rcall	.-1886   	; 0x310 <LCDGotoXY>
     a6e:	8e 81       	ldd	r24, Y+6	; 0x06
     a70:	9f 81       	ldd	r25, Y+7	; 0x07
     a72:	64 e0       	ldi	r22, 0x04	; 4
     a74:	70 e0       	ldi	r23, 0x00	; 0
     a76:	f0 db       	rcall	.-2080   	; 0x258 <LCDWriteInt>
     a78:	e0 91 0a 03 	lds	r30, 0x030A	; 0x80030a <count3>
     a7c:	f0 91 0b 03 	lds	r31, 0x030B	; 0x80030b <count3+0x1>
     a80:	ee 0f       	add	r30, r30
     a82:	ff 1f       	adc	r31, r31
     a84:	ec 5b       	subi	r30, 0xBC	; 188
     a86:	fc 4f       	sbci	r31, 0xFC	; 252
     a88:	80 81       	ld	r24, Z
     a8a:	91 81       	ldd	r25, Z+1	; 0x01
     a8c:	89 2b       	or	r24, r25
     a8e:	49 f4       	brne	.+18     	; 0xaa2 <__vector_4+0x160>
     a90:	80 91 14 03 	lds	r24, 0x0314	; 0x800314 <B_Sorted>
     a94:	90 91 15 03 	lds	r25, 0x0315	; 0x800315 <B_Sorted+0x1>
     a98:	01 96       	adiw	r24, 0x01	; 1
     a9a:	90 93 15 03 	sts	0x0315, r25	; 0x800315 <B_Sorted+0x1>
     a9e:	80 93 14 03 	sts	0x0314, r24	; 0x800314 <B_Sorted>
     aa2:	e0 91 0a 03 	lds	r30, 0x030A	; 0x80030a <count3>
     aa6:	f0 91 0b 03 	lds	r31, 0x030B	; 0x80030b <count3+0x1>
     aaa:	ee 0f       	add	r30, r30
     aac:	ff 1f       	adc	r31, r31
     aae:	ec 5b       	subi	r30, 0xBC	; 188
     ab0:	fc 4f       	sbci	r31, 0xFC	; 252
     ab2:	80 81       	ld	r24, Z
     ab4:	91 81       	ldd	r25, Z+1	; 0x01
     ab6:	02 97       	sbiw	r24, 0x02	; 2
     ab8:	49 f4       	brne	.+18     	; 0xacc <__vector_4+0x18a>
     aba:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <W_Sorted>
     abe:	90 91 11 04 	lds	r25, 0x0411	; 0x800411 <W_Sorted+0x1>
     ac2:	01 96       	adiw	r24, 0x01	; 1
     ac4:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <W_Sorted+0x1>
     ac8:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <W_Sorted>
     acc:	e0 91 0a 03 	lds	r30, 0x030A	; 0x80030a <count3>
     ad0:	f0 91 0b 03 	lds	r31, 0x030B	; 0x80030b <count3+0x1>
     ad4:	ee 0f       	add	r30, r30
     ad6:	ff 1f       	adc	r31, r31
     ad8:	ec 5b       	subi	r30, 0xBC	; 188
     ada:	fc 4f       	sbci	r31, 0xFC	; 252
     adc:	80 81       	ld	r24, Z
     ade:	91 81       	ldd	r25, Z+1	; 0x01
     ae0:	03 97       	sbiw	r24, 0x03	; 3
     ae2:	49 f4       	brne	.+18     	; 0xaf6 <__vector_4+0x1b4>
     ae4:	80 91 34 03 	lds	r24, 0x0334	; 0x800334 <S_Sorted>
     ae8:	90 91 35 03 	lds	r25, 0x0335	; 0x800335 <S_Sorted+0x1>
     aec:	01 96       	adiw	r24, 0x01	; 1
     aee:	90 93 35 03 	sts	0x0335, r25	; 0x800335 <S_Sorted+0x1>
     af2:	80 93 34 03 	sts	0x0334, r24	; 0x800334 <S_Sorted>
     af6:	e0 91 0a 03 	lds	r30, 0x030A	; 0x80030a <count3>
     afa:	f0 91 0b 03 	lds	r31, 0x030B	; 0x80030b <count3+0x1>
     afe:	ee 0f       	add	r30, r30
     b00:	ff 1f       	adc	r31, r31
     b02:	ec 5b       	subi	r30, 0xBC	; 188
     b04:	fc 4f       	sbci	r31, 0xFC	; 252
     b06:	80 81       	ld	r24, Z
     b08:	91 81       	ldd	r25, Z+1	; 0x01
     b0a:	01 97       	sbiw	r24, 0x01	; 1
     b0c:	49 f4       	brne	.+18     	; 0xb20 <__vector_4+0x1de>
     b0e:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <A_Sorted>
     b12:	90 91 0d 04 	lds	r25, 0x040D	; 0x80040d <A_Sorted+0x1>
     b16:	01 96       	adiw	r24, 0x01	; 1
     b18:	90 93 0d 04 	sts	0x040D, r25	; 0x80040d <A_Sorted+0x1>
     b1c:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <A_Sorted>
     b20:	86 e9       	ldi	r24, 0x96	; 150
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	fb dc       	rcall	.-1546   	; 0x51c <mTimer>
     b26:	87 e0       	ldi	r24, 0x07	; 7
     b28:	85 b9       	out	0x05, r24	; 5
     b2a:	ff 91       	pop	r31
     b2c:	ef 91       	pop	r30
     b2e:	df 91       	pop	r29
     b30:	cf 91       	pop	r28
     b32:	bf 91       	pop	r27
     b34:	af 91       	pop	r26
     b36:	9f 91       	pop	r25
     b38:	8f 91       	pop	r24
     b3a:	7f 91       	pop	r23
     b3c:	6f 91       	pop	r22
     b3e:	5f 91       	pop	r21
     b40:	4f 91       	pop	r20
     b42:	3f 91       	pop	r19
     b44:	2f 91       	pop	r18
     b46:	0f 90       	pop	r0
     b48:	0b be       	out	0x3b, r0	; 59
     b4a:	0f 90       	pop	r0
     b4c:	0f be       	out	0x3f, r0	; 63
     b4e:	0f 90       	pop	r0
     b50:	1f 90       	pop	r1
     b52:	18 95       	reti

00000b54 <pwmDEF>:

}

void pwmDEF(){
	//Set the timer to fast PWM mode; pg 126
	TCCR0A |= _BV(WGM00) | _BV(WGM01);
     b54:	84 b5       	in	r24, 0x24	; 36
     b56:	83 60       	ori	r24, 0x03	; 3
     b58:	84 bd       	out	0x24, r24	; 36
	//Clear on a compare match; Set output compare A when the time reaches TOP; pg 126
	TCCR0A |= _BV(COM0A1);
     b5a:	84 b5       	in	r24, 0x24	; 36
     b5c:	80 68       	ori	r24, 0x80	; 128
     b5e:	84 bd       	out	0x24, r24	; 36
	
	//Set the frequency for timer 0 for PWM with a pre-scaler of 1024
	TCCR0B |= _BV(CS01) | _BV(CS00);
     b60:	85 b5       	in	r24, 0x25	; 37
     b62:	83 60       	ori	r24, 0x03	; 3
     b64:	85 bd       	out	0x25, r24	; 37
	//Set the duty cycle for PWM; 50%, x/255
	OCR0A = 0x55; //SPEED
     b66:	85 e5       	ldi	r24, 0x55	; 85
     b68:	87 bd       	out	0x27, r24	; 39
     b6a:	08 95       	ret

00000b6c <Hall>:
}
void Hall(){
     b6c:	ef 92       	push	r14
     b6e:	ff 92       	push	r15
     b70:	0f 93       	push	r16
     b72:	1f 93       	push	r17
     b74:	cf 93       	push	r28
     b76:	df 93       	push	r29
            stepnumber=1;
        }
        switch (stepnumber)
        {
            case 1:
            PORTA = STEP1;
     b78:	0f 2e       	mov	r0, r31
     b7a:	f5 e3       	ldi	r31, 0x35	; 53
     b7c:	ef 2e       	mov	r14, r31
     b7e:	f0 2d       	mov	r31, r0
            mTimer(20);
            break;
            case 2:
            PORTA = STEP2;
     b80:	0f 2e       	mov	r0, r31
     b82:	f6 e3       	ldi	r31, 0x36	; 54
     b84:	ff 2e       	mov	r15, r31
     b86:	f0 2d       	mov	r31, r0
            mTimer(20);
            break;
            case 3:
            PORTA = STEP3;
     b88:	0e e2       	ldi	r16, 0x2E	; 46
            mTimer(20);
            break;
            case 4:
            PORTA = STEP4;
     b8a:	1d e2       	ldi	r17, 0x2D	; 45
void Hall(){
    while ((PINA&0x80) == 0x80)
    {
        stepnumber++;
        if(stepnumber == 5){
            stepnumber=1;
     b8c:	c1 e0       	ldi	r28, 0x01	; 1
     b8e:	d0 e0       	ldi	r29, 0x00	; 0
	TCCR0B |= _BV(CS01) | _BV(CS00);
	//Set the duty cycle for PWM; 50%, x/255
	OCR0A = 0x55; //SPEED
}
void Hall(){
    while ((PINA&0x80) == 0x80)
     b90:	31 c0       	rjmp	.+98     	; 0xbf4 <Hall+0x88>
    {
        stepnumber++;
     b92:	80 91 28 03 	lds	r24, 0x0328	; 0x800328 <stepnumber>
     b96:	90 91 29 03 	lds	r25, 0x0329	; 0x800329 <stepnumber+0x1>
     b9a:	01 96       	adiw	r24, 0x01	; 1
     b9c:	90 93 29 03 	sts	0x0329, r25	; 0x800329 <stepnumber+0x1>
     ba0:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <stepnumber>
        if(stepnumber == 5){
     ba4:	85 30       	cpi	r24, 0x05	; 5
     ba6:	91 05       	cpc	r25, r1
     ba8:	29 f4       	brne	.+10     	; 0xbb4 <Hall+0x48>
            stepnumber=1;
     baa:	d0 93 29 03 	sts	0x0329, r29	; 0x800329 <stepnumber+0x1>
     bae:	c0 93 28 03 	sts	0x0328, r28	; 0x800328 <stepnumber>
     bb2:	0d c0       	rjmp	.+26     	; 0xbce <Hall+0x62>
        }
        switch (stepnumber)
     bb4:	82 30       	cpi	r24, 0x02	; 2
     bb6:	91 05       	cpc	r25, r1
     bb8:	79 f0       	breq	.+30     	; 0xbd8 <Hall+0x6c>
     bba:	1c f4       	brge	.+6      	; 0xbc2 <Hall+0x56>
     bbc:	01 97       	sbiw	r24, 0x01	; 1
     bbe:	d1 f4       	brne	.+52     	; 0xbf4 <Hall+0x88>
     bc0:	06 c0       	rjmp	.+12     	; 0xbce <Hall+0x62>
     bc2:	83 30       	cpi	r24, 0x03	; 3
     bc4:	91 05       	cpc	r25, r1
     bc6:	69 f0       	breq	.+26     	; 0xbe2 <Hall+0x76>
     bc8:	04 97       	sbiw	r24, 0x04	; 4
     bca:	81 f0       	breq	.+32     	; 0xbec <Hall+0x80>
     bcc:	13 c0       	rjmp	.+38     	; 0xbf4 <Hall+0x88>
        {
            case 1:
            PORTA = STEP1;
     bce:	e2 b8       	out	0x02, r14	; 2
            mTimer(20);
     bd0:	84 e1       	ldi	r24, 0x14	; 20
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	a3 dc       	rcall	.-1722   	; 0x51c <mTimer>
            break;
     bd6:	0e c0       	rjmp	.+28     	; 0xbf4 <Hall+0x88>
            case 2:
            PORTA = STEP2;
     bd8:	f2 b8       	out	0x02, r15	; 2
            mTimer(20);
     bda:	84 e1       	ldi	r24, 0x14	; 20
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	9e dc       	rcall	.-1732   	; 0x51c <mTimer>
            break;
     be0:	09 c0       	rjmp	.+18     	; 0xbf4 <Hall+0x88>
            case 3:
            PORTA = STEP3;
     be2:	02 b9       	out	0x02, r16	; 2
            mTimer(20);
     be4:	84 e1       	ldi	r24, 0x14	; 20
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	99 dc       	rcall	.-1742   	; 0x51c <mTimer>
            break;
     bea:	04 c0       	rjmp	.+8      	; 0xbf4 <Hall+0x88>
            case 4:
            PORTA = STEP4;
            mTimer(20);
     bec:	12 b9       	out	0x02, r17	; 2
     bee:	84 e1       	ldi	r24, 0x14	; 20
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	94 dc       	rcall	.-1752   	; 0x51c <mTimer>
	TCCR0B |= _BV(CS01) | _BV(CS00);
	//Set the duty cycle for PWM; 50%, x/255
	OCR0A = 0x55; //SPEED
}
void Hall(){
    while ((PINA&0x80) == 0x80)
     bf4:	07 99       	sbic	0x00, 7	; 0
     bf6:	cd cf       	rjmp	.-102    	; 0xb92 <Hall+0x26>
            PORTA = STEP4;
            mTimer(20);
            break;
        }
    }
    curPos = 0;
     bf8:	10 92 11 03 	sts	0x0311, r1	; 0x800311 <curPos+0x1>
     bfc:	10 92 10 03 	sts	0x0310, r1	; 0x800310 <curPos>
     c00:	df 91       	pop	r29
     c02:	cf 91       	pop	r28
     c04:	1f 91       	pop	r17
     c06:	0f 91       	pop	r16
     c08:	ff 90       	pop	r15
     c0a:	ef 90       	pop	r14
     c0c:	08 95       	ret

00000c0e <main>:


void main()
{

CLKPR=0x80;
     c0e:	e1 e6       	ldi	r30, 0x61	; 97
     c10:	f0 e0       	ldi	r31, 0x00	; 0
     c12:	80 e8       	ldi	r24, 0x80	; 128
     c14:	80 83       	st	Z, r24

CLKPR=0x01; //Required to set CPU Clock to 8MHz
     c16:	81 e0       	ldi	r24, 0x01	; 1
     c18:	80 83       	st	Z, r24


TCCR1B|= _BV(CS11);
     c1a:	e1 e8       	ldi	r30, 0x81	; 129
     c1c:	f0 e0       	ldi	r31, 0x00	; 0
     c1e:	80 81       	ld	r24, Z
     c20:	82 60       	ori	r24, 0x02	; 2
     c22:	80 83       	st	Z, r24




cli();  // disable all of the interrupt ==========================
     c24:	f8 94       	cli

// config the external interrupt ======================================

    
	//Enable INT2, INT3, INT4, INT5
	EIMSK |= (_BV(INT2) | _BV(INT3) | _BV(INT4) | _BV(INT5));
     c26:	8d b3       	in	r24, 0x1d	; 29
     c28:	8c 63       	ori	r24, 0x3C	; 60
     c2a:	8d bb       	out	0x1d, r24	; 29
	
	//Rising edge interrupt for INT2 (OR); Falling edge interrupt for INT3 (EX), INT4 (Pause-Resume Button), INT5 (Ramp-Down Button)
	EICRA |= (_BV(ISC21) | _BV(ISC20) | _BV(ISC31));
     c2c:	e9 e6       	ldi	r30, 0x69	; 105
     c2e:	f0 e0       	ldi	r31, 0x00	; 0
     c30:	80 81       	ld	r24, Z
     c32:	80 6b       	ori	r24, 0xB0	; 176
     c34:	80 83       	st	Z, r24
	EICRB |= (_BV(ISC41) | _BV(ISC40)| _BV(ISC51)) ;
     c36:	ea e6       	ldi	r30, 0x6A	; 106
     c38:	f0 e0       	ldi	r31, 0x00	; 0
     c3a:	80 81       	ld	r24, Z
     c3c:	8b 60       	ori	r24, 0x0B	; 11
     c3e:	80 83       	st	Z, r24
	
// config ADC =========================================================
	//enable ADC; enabale ADC interrupt; set a pre-scaler of 32 for ADC (ADC got a frequency of 250kHz)
	ADCSRA |= (_BV(ADEN) | _BV(ADIE) );
     c40:	ea e7       	ldi	r30, 0x7A	; 122
     c42:	f0 e0       	ldi	r31, 0x00	; 0
     c44:	80 81       	ld	r24, Z
     c46:	88 68       	ori	r24, 0x88	; 136
     c48:	80 83       	st	Z, r24
	
	//The ADC is right-adjusted; ADC1 is configured
	ADMUX |= (_BV(REFS0) | _BV(MUX0));
     c4a:	ec e7       	ldi	r30, 0x7C	; 124
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	80 81       	ld	r24, Z
     c50:	81 64       	ori	r24, 0x41	; 65
     c52:	80 83       	st	Z, r24


// sets the Global Enable for all interrupts ==========================

sei();
     c54:	78 94       	sei



// initialize the ADC, start one conversion at the beginning ==========

   	InitLCD(LS_BLINK|LS_ULINE);
     c56:	83 e0       	ldi	r24, 0x03	; 3
     c58:	c1 da       	rcall	.-2686   	; 0x1dc <InitLCD>

    	
	DDRC = 0xFF; // set the PORTC as output to display the ADC result ==================
     c5a:	8f ef       	ldi	r24, 0xFF	; 255
     c5c:	87 b9       	out	0x07, r24	; 7

	DDRE = 0x00; //initialize the port E as the input
     c5e:	1d b8       	out	0x0d, r1	; 13
	DDRD = 0x00;
     c60:	1a b8       	out	0x0a, r1	; 10
	DDRL = 0xFF;
     c62:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>

	//ADCSRA |= _BV(ADSC);

	DDRB = 0xFF; //initialize the port B
     c66:	84 b9       	out	0x04, r24	; 4
	DDRA = 0b00111111; //0xFF
     c68:	8f e3       	ldi	r24, 0x3F	; 63
     c6a:	81 b9       	out	0x01, r24	; 1
    initLink(&rtnLink);
     c6c:	82 e2       	ldi	r24, 0x22	; 34
     c6e:	93 e0       	ldi	r25, 0x03	; 3
     c70:	47 dc       	rcall	.-1906   	; 0x500 <initLink>
	rtnLink = NULL;
     c72:	10 92 23 03 	sts	0x0323, r1	; 0x800323 <rtnLink+0x1>
     c76:	10 92 22 03 	sts	0x0322, r1	; 0x800322 <rtnLink>
	newLink = NULL;
     c7a:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <newLink+0x1>
     c7e:	10 92 40 03 	sts	0x0340, r1	; 0x800340 <newLink>

	pwmDEF();
     c82:	68 df       	rcall	.-304    	; 0xb54 <pwmDEF>
    Hall();
     c84:	73 df       	rcall	.-282    	; 0xb6c <Hall>
     c86:	81 e0       	ldi	r24, 0x01	; 1
    curStep=1;
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	90 93 2f 03 	sts	0x032F, r25	; 0x80032f <curStep+0x1>
     c8e:	80 93 2e 03 	sts	0x032E, r24	; 0x80032e <curStep>
     c92:	10 92 11 03 	sts	0x0311, r1	; 0x800311 <curPos+0x1>
	curPos=0;
     c96:	10 92 10 03 	sts	0x0310, r1	; 0x800310 <curPos>
     c9a:	87 e0       	ldi	r24, 0x07	; 7



   

    PORTB = MOTOR_CCW;
     c9c:	85 b9       	out	0x05, r24	; 5
     c9e:	ee 24       	eor	r14, r14
        
		while(1){
		 
	         if ((PIND&0x04)==0 && min < 1200)
	         {
		         ADC_result_flag = 1;
     ca0:	e3 94       	inc	r14
     ca2:	f1 2c       	mov	r15, r1
     ca4:	0f 2e       	mov	r0, r31
				  // LCDWriteIntXY(6,1,array[3],4);
			       LCDWriteIntXY(11,0,min,4); 
				   LCDWriteIntXY(11,1,count4,4);  
				   //mTimer(1000);
			 ADC_result_flag = 0;
			 min = 1200;
     ca6:	f0 eb       	ldi	r31, 0xB0	; 176
     ca8:	cf 2e       	mov	r12, r31
     caa:	f4 e0       	ldi	r31, 0x04	; 4
     cac:	df 2e       	mov	r13, r31
     cae:	f0 2d       	mov	r31, r0
     cb0:	02 e0       	ldi	r16, 0x02	; 2
					    S_Sorted=S_Total-1;
					   
			       }
			       else if( (870 <= min) && (min <= 963))
			       {
				       array[count2]=2;// W
     cb2:	10 e0       	ldi	r17, 0x00	; 0
     cb4:	c3 e0       	ldi	r28, 0x03	; 3
				       A_Total = A_Total + 1;
					   A_Sorted=A_Total-1;
			       }
			       else if ( (400 <= min) && (min <= 800))
			       {
				       array[count2]=3;//S
     cb6:	d0 e0       	ldi	r29, 0x00	; 0
     cb8:	4a 99       	sbic	0x09, 2	; 9

    PORTB = MOTOR_CCW;
        
		while(1){
		 
	         if ((PIND&0x04)==0 && min < 1200)
     cba:	0b c0       	rjmp	.+22     	; 0xcd2 <main+0xc4>
     cbc:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <min>
     cc0:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <min+0x1>
     cc4:	80 3b       	cpi	r24, 0xB0	; 176
     cc6:	94 40       	sbci	r25, 0x04	; 4
     cc8:	24 f4       	brge	.+8      	; 0xcd2 <main+0xc4>
     cca:	f0 92 2d 03 	sts	0x032D, r15	; 0x80032d <ADC_result_flag+0x1>
	         {
		         ADC_result_flag = 1;
     cce:	e0 92 2c 03 	sts	0x032C, r14	; 0x80032c <ADC_result_flag>
     cd2:	80 91 2c 03 	lds	r24, 0x032C	; 0x80032c <ADC_result_flag>
	         }
	               
	               
               
           
		 if (ADC_result_flag){
     cd6:	90 91 2d 03 	lds	r25, 0x032D	; 0x80032d <ADC_result_flag+0x1>
     cda:	89 2b       	or	r24, r25
     cdc:	09 f4       	brne	.+2      	; 0xce0 <main+0xd2>
     cde:	e4 c0       	rjmp	.+456    	; 0xea8 <main+0x29a>
     ce0:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <min>
			 //min=array[0];
			       //Set on the flag to display the result on LCD
			       if (min<= 300){
     ce4:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <min+0x1>
     ce8:	8d 32       	cpi	r24, 0x2D	; 45
     cea:	91 40       	sbci	r25, 0x01	; 1
     cec:	34 f5       	brge	.+76     	; 0xd3a <main+0x12c>
     cee:	e0 91 0c 03 	lds	r30, 0x030C	; 0x80030c <count2>
					   array[count2]=1;//AL
     cf2:	f0 91 0d 03 	lds	r31, 0x030D	; 0x80030d <count2+0x1>
     cf6:	ee 0f       	add	r30, r30
     cf8:	ff 1f       	adc	r31, r31
     cfa:	ec 5b       	subi	r30, 0xBC	; 188
     cfc:	fc 4f       	sbci	r31, 0xFC	; 252
     cfe:	f1 82       	std	Z+1, r15	; 0x01
     d00:	e0 82       	st	Z, r14
     d02:	80 91 0c 03 	lds	r24, 0x030C	; 0x80030c <count2>
					   count2++;
     d06:	90 91 0d 03 	lds	r25, 0x030D	; 0x80030d <count2+0x1>
     d0a:	01 96       	adiw	r24, 0x01	; 1
     d0c:	90 93 0d 03 	sts	0x030D, r25	; 0x80030d <count2+0x1>
     d10:	80 93 0c 03 	sts	0x030C, r24	; 0x80030c <count2>
     d14:	80 91 12 03 	lds	r24, 0x0312	; 0x800312 <A_Total>

				       A_Total = A_Total + 1;
     d18:	90 91 13 03 	lds	r25, 0x0313	; 0x800313 <A_Total+0x1>
     d1c:	01 96       	adiw	r24, 0x01	; 1
     d1e:	90 93 13 03 	sts	0x0313, r25	; 0x800313 <A_Total+0x1>
     d22:	80 93 12 03 	sts	0x0312, r24	; 0x800312 <A_Total>
     d26:	80 91 12 03 	lds	r24, 0x0312	; 0x800312 <A_Total>
					   A_Sorted=A_Total-1;
     d2a:	90 91 13 03 	lds	r25, 0x0313	; 0x800313 <A_Total+0x1>
     d2e:	01 97       	sbiw	r24, 0x01	; 1
     d30:	90 93 0d 04 	sts	0x040D, r25	; 0x80040d <A_Sorted+0x1>
     d34:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <A_Sorted>
     d38:	9b c0       	rjmp	.+310    	; 0xe70 <main+0x262>
     d3a:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <min>
			       }
			       else if ( (400 <= min) && (min <= 800))
     d3e:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <min+0x1>
     d42:	80 39       	cpi	r24, 0x90	; 144
     d44:	91 40       	sbci	r25, 0x01	; 1
     d46:	6c f1       	brlt	.+90     	; 0xda2 <main+0x194>
     d48:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <min>
     d4c:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <min+0x1>
     d50:	81 32       	cpi	r24, 0x21	; 33
     d52:	93 40       	sbci	r25, 0x03	; 3
     d54:	34 f5       	brge	.+76     	; 0xda2 <main+0x194>
     d56:	e0 91 0c 03 	lds	r30, 0x030C	; 0x80030c <count2>
			       {
				       array[count2]=3;//S
     d5a:	f0 91 0d 03 	lds	r31, 0x030D	; 0x80030d <count2+0x1>
     d5e:	ee 0f       	add	r30, r30
     d60:	ff 1f       	adc	r31, r31
     d62:	ec 5b       	subi	r30, 0xBC	; 188
     d64:	fc 4f       	sbci	r31, 0xFC	; 252
     d66:	d1 83       	std	Z+1, r29	; 0x01
     d68:	c0 83       	st	Z, r28
     d6a:	80 91 0c 03 	lds	r24, 0x030C	; 0x80030c <count2>
					   count2++;
     d6e:	90 91 0d 03 	lds	r25, 0x030D	; 0x80030d <count2+0x1>
     d72:	01 96       	adiw	r24, 0x01	; 1
     d74:	90 93 0d 03 	sts	0x030D, r25	; 0x80030d <count2+0x1>
     d78:	80 93 0c 03 	sts	0x030C, r24	; 0x80030c <count2>
     d7c:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <S_Total>
				       S_Total = S_Total + 1;
     d80:	90 91 2b 03 	lds	r25, 0x032B	; 0x80032b <S_Total+0x1>
     d84:	01 96       	adiw	r24, 0x01	; 1
     d86:	90 93 2b 03 	sts	0x032B, r25	; 0x80032b <S_Total+0x1>
     d8a:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <S_Total>
     d8e:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <S_Total>
					    S_Sorted=S_Total-1;
     d92:	90 91 2b 03 	lds	r25, 0x032B	; 0x80032b <S_Total+0x1>
     d96:	01 97       	sbiw	r24, 0x01	; 1
     d98:	90 93 35 03 	sts	0x0335, r25	; 0x800335 <S_Sorted+0x1>
     d9c:	80 93 34 03 	sts	0x0334, r24	; 0x800334 <S_Sorted>
     da0:	67 c0       	rjmp	.+206    	; 0xe70 <main+0x262>
     da2:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <min>
					   
			       }
			       else if( (870 <= min) && (min <= 963))
     da6:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <min+0x1>
     daa:	86 36       	cpi	r24, 0x66	; 102
     dac:	93 40       	sbci	r25, 0x03	; 3
     dae:	6c f1       	brlt	.+90     	; 0xe0a <main+0x1fc>
     db0:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <min>
     db4:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <min+0x1>
     db8:	84 3c       	cpi	r24, 0xC4	; 196
     dba:	93 40       	sbci	r25, 0x03	; 3
     dbc:	34 f5       	brge	.+76     	; 0xe0a <main+0x1fc>
     dbe:	e0 91 0c 03 	lds	r30, 0x030C	; 0x80030c <count2>
			       {
				       array[count2]=2;// W
     dc2:	f0 91 0d 03 	lds	r31, 0x030D	; 0x80030d <count2+0x1>
     dc6:	ee 0f       	add	r30, r30
     dc8:	ff 1f       	adc	r31, r31
     dca:	ec 5b       	subi	r30, 0xBC	; 188
     dcc:	fc 4f       	sbci	r31, 0xFC	; 252
     dce:	11 83       	std	Z+1, r17	; 0x01
     dd0:	00 83       	st	Z, r16
     dd2:	80 91 0c 03 	lds	r24, 0x030C	; 0x80030c <count2>
					   count2++;
     dd6:	90 91 0d 03 	lds	r25, 0x030D	; 0x80030d <count2+0x1>
     dda:	01 96       	adiw	r24, 0x01	; 1
     ddc:	90 93 0d 03 	sts	0x030D, r25	; 0x80030d <count2+0x1>
     de0:	80 93 0c 03 	sts	0x030C, r24	; 0x80030c <count2>
     de4:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <W_Total>
				       W_Total = W_Total + 1;
     de8:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <W_Total+0x1>
     dec:	01 96       	adiw	r24, 0x01	; 1
     dee:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <W_Total+0x1>
     df2:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <W_Total>
     df6:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <W_Total>
					    W_Sorted=W_Total-1;
     dfa:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <W_Total+0x1>
     dfe:	01 97       	sbiw	r24, 0x01	; 1
     e00:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <W_Sorted+0x1>
     e04:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <W_Sorted>
     e08:	33 c0       	rjmp	.+102    	; 0xe70 <main+0x262>
     e0a:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <min>
			       }
			       else if( (964 < min) && (min <= 1000))
     e0e:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <min+0x1>
     e12:	85 3c       	cpi	r24, 0xC5	; 197
     e14:	93 40       	sbci	r25, 0x03	; 3
     e16:	64 f1       	brlt	.+88     	; 0xe70 <main+0x262>
     e18:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <min>
     e1c:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <min+0x1>
     e20:	89 3e       	cpi	r24, 0xE9	; 233
     e22:	93 40       	sbci	r25, 0x03	; 3
     e24:	2c f5       	brge	.+74     	; 0xe70 <main+0x262>
     e26:	e0 91 0c 03 	lds	r30, 0x030C	; 0x80030c <count2>
			       {
				       array[count2]=0;//B
     e2a:	f0 91 0d 03 	lds	r31, 0x030D	; 0x80030d <count2+0x1>
     e2e:	ee 0f       	add	r30, r30
     e30:	ff 1f       	adc	r31, r31
     e32:	ec 5b       	subi	r30, 0xBC	; 188
     e34:	fc 4f       	sbci	r31, 0xFC	; 252
     e36:	11 82       	std	Z+1, r1	; 0x01
     e38:	10 82       	st	Z, r1
     e3a:	80 91 0c 03 	lds	r24, 0x030C	; 0x80030c <count2>
					   count2++;
     e3e:	90 91 0d 03 	lds	r25, 0x030D	; 0x80030d <count2+0x1>
     e42:	01 96       	adiw	r24, 0x01	; 1
     e44:	90 93 0d 03 	sts	0x030D, r25	; 0x80030d <count2+0x1>
     e48:	80 93 0c 03 	sts	0x030C, r24	; 0x80030c <count2>
     e4c:	80 91 20 03 	lds	r24, 0x0320	; 0x800320 <B_Total>
				       B_Total = B_Total + 1;
     e50:	90 91 21 03 	lds	r25, 0x0321	; 0x800321 <B_Total+0x1>
     e54:	01 96       	adiw	r24, 0x01	; 1
     e56:	90 93 21 03 	sts	0x0321, r25	; 0x800321 <B_Total+0x1>
     e5a:	80 93 20 03 	sts	0x0320, r24	; 0x800320 <B_Total>
     e5e:	80 91 20 03 	lds	r24, 0x0320	; 0x800320 <B_Total>
					    B_Sorted=B_Total-1;
     e62:	90 91 21 03 	lds	r25, 0x0321	; 0x800321 <B_Total+0x1>
     e66:	01 97       	sbiw	r24, 0x01	; 1
     e68:	90 93 15 03 	sts	0x0315, r25	; 0x800315 <B_Sorted+0x1>
     e6c:	80 93 14 03 	sts	0x0314, r24	; 0x800314 <B_Sorted>
				  // LCDClear();
				   //LCDWriteIntXY(0,0,array[0],4);
				   //LCDWriteIntXY(6,0,array[1],4);
				   //LCDWriteIntXY(0,1,array[2],4);
				  // LCDWriteIntXY(6,1,array[3],4);
			       LCDWriteIntXY(11,0,min,4); 
     e70:	60 e0       	ldi	r22, 0x00	; 0
     e72:	8b e0       	ldi	r24, 0x0B	; 11
     e74:	4d da       	rcall	.-2918   	; 0x310 <LCDGotoXY>
     e76:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <min>
     e7a:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <min+0x1>
     e7e:	64 e0       	ldi	r22, 0x04	; 4
     e80:	70 e0       	ldi	r23, 0x00	; 0
     e82:	ea d9       	rcall	.-3116   	; 0x258 <LCDWriteInt>
				   LCDWriteIntXY(11,1,count4,4);  
     e84:	61 e0       	ldi	r22, 0x01	; 1
     e86:	8b e0       	ldi	r24, 0x0B	; 11
     e88:	43 da       	rcall	.-2938   	; 0x310 <LCDGotoXY>
     e8a:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <__data_end>
     e8e:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <__data_end+0x1>
     e92:	64 e0       	ldi	r22, 0x04	; 4
     e94:	70 e0       	ldi	r23, 0x00	; 0
     e96:	e0 d9       	rcall	.-3136   	; 0x258 <LCDWriteInt>
     e98:	10 92 2d 03 	sts	0x032D, r1	; 0x80032d <ADC_result_flag+0x1>
				   //mTimer(1000);
			 ADC_result_flag = 0;
     e9c:	10 92 2c 03 	sts	0x032C, r1	; 0x80032c <ADC_result_flag>
     ea0:	d0 92 e7 02 	sts	0x02E7, r13	; 0x8002e7 <min+0x1>
			 min = 1200;
     ea4:	c0 92 e6 02 	sts	0x02E6, r12	; 0x8002e6 <min>
     ea8:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <del_Q_flag>
	
		 }
		 
            
			if (del_Q_flag == 1){
     eac:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <del_Q_flag+0x1>
     eb0:	01 97       	sbiw	r24, 0x01	; 1
     eb2:	09 f5       	brne	.+66     	; 0xef6 <main+0x2e8>
     eb4:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <del_Q_flag+0x1>
				del_Q_flag = 0;
     eb8:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <del_Q_flag>
     ebc:	80 91 0c 03 	lds	r24, 0x030C	; 0x80030c <count2>
				if(count2==8){
     ec0:	90 91 0d 03 	lds	r25, 0x030D	; 0x80030d <count2+0x1>
     ec4:	08 97       	sbiw	r24, 0x08	; 8
     ec6:	21 f4       	brne	.+8      	; 0xed0 <main+0x2c2>
     ec8:	10 92 0d 03 	sts	0x030D, r1	; 0x80030d <count2+0x1>
					count2=0;
     ecc:	10 92 0c 03 	sts	0x030C, r1	; 0x80030c <count2>
     ed0:	80 91 0a 03 	lds	r24, 0x030A	; 0x80030a <count3>
				}
				count3++;
     ed4:	90 91 0b 03 	lds	r25, 0x030B	; 0x80030b <count3+0x1>
     ed8:	01 96       	adiw	r24, 0x01	; 1
     eda:	90 93 0b 03 	sts	0x030B, r25	; 0x80030b <count3+0x1>
     ede:	80 93 0a 03 	sts	0x030A, r24	; 0x80030a <count3>
     ee2:	80 91 0a 03 	lds	r24, 0x030A	; 0x80030a <count3>
				if(count3==8){
     ee6:	90 91 0b 03 	lds	r25, 0x030B	; 0x80030b <count3+0x1>
     eea:	08 97       	sbiw	r24, 0x08	; 8
     eec:	21 f4       	brne	.+8      	; 0xef6 <main+0x2e8>
     eee:	10 92 0b 03 	sts	0x030B, r1	; 0x80030b <count3+0x1>
					count3=0;
     ef2:	10 92 0a 03 	sts	0x030A, r1	; 0x80030a <count3>
     ef6:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <ramp_flag>
				}
				
				
			}
			 	if (ramp_flag){
     efa:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <ramp_flag+0x1>
     efe:	89 2b       	or	r24, r25
     f00:	09 f4       	brne	.+2      	; 0xf04 <main+0x2f6>
     f02:	da ce       	rjmp	.-588    	; 0xcb8 <main+0xaa>
     f04:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <__TEXT_REGION_LENGTH__+0x7c0091>
					
					 TCCR3B = 0x00;
     f08:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7c0071>
					 TIMSK3 = 0x00;
     f0c:	f8 94       	cli
				 	cli();
     f0e:	10 92 17 03 	sts	0x0317, r1	; 0x800317 <ramp_flag+0x1>
				 	while(1){
						 ramp_flag = 0;
     f12:	10 92 16 03 	sts	0x0316, r1	; 0x800316 <ramp_flag>
     f16:	fb cf       	rjmp	.-10     	; 0xf0e <main+0x300>

00000f18 <__divmodhi4>:
     f18:	97 fb       	bst	r25, 7
     f1a:	07 2e       	mov	r0, r23
     f1c:	16 f4       	brtc	.+4      	; 0xf22 <__divmodhi4+0xa>
     f1e:	00 94       	com	r0
     f20:	06 d0       	rcall	.+12     	; 0xf2e <__divmodhi4_neg1>
     f22:	77 fd       	sbrc	r23, 7
     f24:	08 d0       	rcall	.+16     	; 0xf36 <__divmodhi4_neg2>
     f26:	0b d0       	rcall	.+22     	; 0xf3e <__udivmodhi4>
     f28:	07 fc       	sbrc	r0, 7
     f2a:	05 d0       	rcall	.+10     	; 0xf36 <__divmodhi4_neg2>
     f2c:	3e f4       	brtc	.+14     	; 0xf3c <__divmodhi4_exit>

00000f2e <__divmodhi4_neg1>:
     f2e:	90 95       	com	r25
     f30:	81 95       	neg	r24
     f32:	9f 4f       	sbci	r25, 0xFF	; 255
     f34:	08 95       	ret

00000f36 <__divmodhi4_neg2>:
     f36:	70 95       	com	r23
     f38:	61 95       	neg	r22
     f3a:	7f 4f       	sbci	r23, 0xFF	; 255

00000f3c <__divmodhi4_exit>:
     f3c:	08 95       	ret

00000f3e <__udivmodhi4>:
     f3e:	aa 1b       	sub	r26, r26
     f40:	bb 1b       	sub	r27, r27
     f42:	51 e1       	ldi	r21, 0x11	; 17
     f44:	07 c0       	rjmp	.+14     	; 0xf54 <__udivmodhi4_ep>

00000f46 <__udivmodhi4_loop>:
     f46:	aa 1f       	adc	r26, r26
     f48:	bb 1f       	adc	r27, r27
     f4a:	a6 17       	cp	r26, r22
     f4c:	b7 07       	cpc	r27, r23
     f4e:	10 f0       	brcs	.+4      	; 0xf54 <__udivmodhi4_ep>
     f50:	a6 1b       	sub	r26, r22
     f52:	b7 0b       	sbc	r27, r23

00000f54 <__udivmodhi4_ep>:
     f54:	88 1f       	adc	r24, r24
     f56:	99 1f       	adc	r25, r25
     f58:	5a 95       	dec	r21
     f5a:	a9 f7       	brne	.-22     	; 0xf46 <__udivmodhi4_loop>
     f5c:	80 95       	com	r24
     f5e:	90 95       	com	r25
     f60:	bc 01       	movw	r22, r24
     f62:	cd 01       	movw	r24, r26
     f64:	08 95       	ret

00000f66 <malloc>:
     f66:	0f 93       	push	r16
     f68:	1f 93       	push	r17
     f6a:	cf 93       	push	r28
     f6c:	df 93       	push	r29
     f6e:	82 30       	cpi	r24, 0x02	; 2
     f70:	91 05       	cpc	r25, r1
     f72:	10 f4       	brcc	.+4      	; 0xf78 <malloc+0x12>
     f74:	82 e0       	ldi	r24, 0x02	; 2
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	e0 91 16 04 	lds	r30, 0x0416	; 0x800416 <__flp>
     f7c:	f0 91 17 04 	lds	r31, 0x0417	; 0x800417 <__flp+0x1>
     f80:	20 e0       	ldi	r18, 0x00	; 0
     f82:	30 e0       	ldi	r19, 0x00	; 0
     f84:	a0 e0       	ldi	r26, 0x00	; 0
     f86:	b0 e0       	ldi	r27, 0x00	; 0
     f88:	30 97       	sbiw	r30, 0x00	; 0
     f8a:	19 f1       	breq	.+70     	; 0xfd2 <malloc+0x6c>
     f8c:	40 81       	ld	r20, Z
     f8e:	51 81       	ldd	r21, Z+1	; 0x01
     f90:	02 81       	ldd	r16, Z+2	; 0x02
     f92:	13 81       	ldd	r17, Z+3	; 0x03
     f94:	48 17       	cp	r20, r24
     f96:	59 07       	cpc	r21, r25
     f98:	c8 f0       	brcs	.+50     	; 0xfcc <malloc+0x66>
     f9a:	84 17       	cp	r24, r20
     f9c:	95 07       	cpc	r25, r21
     f9e:	69 f4       	brne	.+26     	; 0xfba <malloc+0x54>
     fa0:	10 97       	sbiw	r26, 0x00	; 0
     fa2:	31 f0       	breq	.+12     	; 0xfb0 <malloc+0x4a>
     fa4:	12 96       	adiw	r26, 0x02	; 2
     fa6:	0c 93       	st	X, r16
     fa8:	12 97       	sbiw	r26, 0x02	; 2
     faa:	13 96       	adiw	r26, 0x03	; 3
     fac:	1c 93       	st	X, r17
     fae:	27 c0       	rjmp	.+78     	; 0xffe <malloc+0x98>
     fb0:	00 93 16 04 	sts	0x0416, r16	; 0x800416 <__flp>
     fb4:	10 93 17 04 	sts	0x0417, r17	; 0x800417 <__flp+0x1>
     fb8:	22 c0       	rjmp	.+68     	; 0xffe <malloc+0x98>
     fba:	21 15       	cp	r18, r1
     fbc:	31 05       	cpc	r19, r1
     fbe:	19 f0       	breq	.+6      	; 0xfc6 <malloc+0x60>
     fc0:	42 17       	cp	r20, r18
     fc2:	53 07       	cpc	r21, r19
     fc4:	18 f4       	brcc	.+6      	; 0xfcc <malloc+0x66>
     fc6:	9a 01       	movw	r18, r20
     fc8:	bd 01       	movw	r22, r26
     fca:	ef 01       	movw	r28, r30
     fcc:	df 01       	movw	r26, r30
     fce:	f8 01       	movw	r30, r16
     fd0:	db cf       	rjmp	.-74     	; 0xf88 <malloc+0x22>
     fd2:	21 15       	cp	r18, r1
     fd4:	31 05       	cpc	r19, r1
     fd6:	f9 f0       	breq	.+62     	; 0x1016 <__EEPROM_REGION_LENGTH__+0x16>
     fd8:	28 1b       	sub	r18, r24
     fda:	39 0b       	sbc	r19, r25
     fdc:	24 30       	cpi	r18, 0x04	; 4
     fde:	31 05       	cpc	r19, r1
     fe0:	80 f4       	brcc	.+32     	; 0x1002 <__EEPROM_REGION_LENGTH__+0x2>
     fe2:	8a 81       	ldd	r24, Y+2	; 0x02
     fe4:	9b 81       	ldd	r25, Y+3	; 0x03
     fe6:	61 15       	cp	r22, r1
     fe8:	71 05       	cpc	r23, r1
     fea:	21 f0       	breq	.+8      	; 0xff4 <malloc+0x8e>
     fec:	fb 01       	movw	r30, r22
     fee:	93 83       	std	Z+3, r25	; 0x03
     ff0:	82 83       	std	Z+2, r24	; 0x02
     ff2:	04 c0       	rjmp	.+8      	; 0xffc <malloc+0x96>
     ff4:	90 93 17 04 	sts	0x0417, r25	; 0x800417 <__flp+0x1>
     ff8:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <__flp>
     ffc:	fe 01       	movw	r30, r28
     ffe:	32 96       	adiw	r30, 0x02	; 2
    1000:	44 c0       	rjmp	.+136    	; 0x108a <__EEPROM_REGION_LENGTH__+0x8a>
    1002:	fe 01       	movw	r30, r28
    1004:	e2 0f       	add	r30, r18
    1006:	f3 1f       	adc	r31, r19
    1008:	81 93       	st	Z+, r24
    100a:	91 93       	st	Z+, r25
    100c:	22 50       	subi	r18, 0x02	; 2
    100e:	31 09       	sbc	r19, r1
    1010:	39 83       	std	Y+1, r19	; 0x01
    1012:	28 83       	st	Y, r18
    1014:	3a c0       	rjmp	.+116    	; 0x108a <__EEPROM_REGION_LENGTH__+0x8a>
    1016:	20 91 14 04 	lds	r18, 0x0414	; 0x800414 <__brkval>
    101a:	30 91 15 04 	lds	r19, 0x0415	; 0x800415 <__brkval+0x1>
    101e:	23 2b       	or	r18, r19
    1020:	41 f4       	brne	.+16     	; 0x1032 <__EEPROM_REGION_LENGTH__+0x32>
    1022:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1026:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    102a:	30 93 15 04 	sts	0x0415, r19	; 0x800415 <__brkval+0x1>
    102e:	20 93 14 04 	sts	0x0414, r18	; 0x800414 <__brkval>
    1032:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    1036:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    103a:	21 15       	cp	r18, r1
    103c:	31 05       	cpc	r19, r1
    103e:	41 f4       	brne	.+16     	; 0x1050 <__EEPROM_REGION_LENGTH__+0x50>
    1040:	2d b7       	in	r18, 0x3d	; 61
    1042:	3e b7       	in	r19, 0x3e	; 62
    1044:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    1048:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    104c:	24 1b       	sub	r18, r20
    104e:	35 0b       	sbc	r19, r21
    1050:	e0 91 14 04 	lds	r30, 0x0414	; 0x800414 <__brkval>
    1054:	f0 91 15 04 	lds	r31, 0x0415	; 0x800415 <__brkval+0x1>
    1058:	e2 17       	cp	r30, r18
    105a:	f3 07       	cpc	r31, r19
    105c:	a0 f4       	brcc	.+40     	; 0x1086 <__EEPROM_REGION_LENGTH__+0x86>
    105e:	2e 1b       	sub	r18, r30
    1060:	3f 0b       	sbc	r19, r31
    1062:	28 17       	cp	r18, r24
    1064:	39 07       	cpc	r19, r25
    1066:	78 f0       	brcs	.+30     	; 0x1086 <__EEPROM_REGION_LENGTH__+0x86>
    1068:	ac 01       	movw	r20, r24
    106a:	4e 5f       	subi	r20, 0xFE	; 254
    106c:	5f 4f       	sbci	r21, 0xFF	; 255
    106e:	24 17       	cp	r18, r20
    1070:	35 07       	cpc	r19, r21
    1072:	48 f0       	brcs	.+18     	; 0x1086 <__EEPROM_REGION_LENGTH__+0x86>
    1074:	4e 0f       	add	r20, r30
    1076:	5f 1f       	adc	r21, r31
    1078:	50 93 15 04 	sts	0x0415, r21	; 0x800415 <__brkval+0x1>
    107c:	40 93 14 04 	sts	0x0414, r20	; 0x800414 <__brkval>
    1080:	81 93       	st	Z+, r24
    1082:	91 93       	st	Z+, r25
    1084:	02 c0       	rjmp	.+4      	; 0x108a <__EEPROM_REGION_LENGTH__+0x8a>
    1086:	e0 e0       	ldi	r30, 0x00	; 0
    1088:	f0 e0       	ldi	r31, 0x00	; 0
    108a:	cf 01       	movw	r24, r30
    108c:	df 91       	pop	r29
    108e:	cf 91       	pop	r28
    1090:	1f 91       	pop	r17
    1092:	0f 91       	pop	r16
    1094:	08 95       	ret

00001096 <free>:
    1096:	cf 93       	push	r28
    1098:	df 93       	push	r29
    109a:	00 97       	sbiw	r24, 0x00	; 0
    109c:	09 f4       	brne	.+2      	; 0x10a0 <free+0xa>
    109e:	81 c0       	rjmp	.+258    	; 0x11a2 <free+0x10c>
    10a0:	fc 01       	movw	r30, r24
    10a2:	32 97       	sbiw	r30, 0x02	; 2
    10a4:	13 82       	std	Z+3, r1	; 0x03
    10a6:	12 82       	std	Z+2, r1	; 0x02
    10a8:	a0 91 16 04 	lds	r26, 0x0416	; 0x800416 <__flp>
    10ac:	b0 91 17 04 	lds	r27, 0x0417	; 0x800417 <__flp+0x1>
    10b0:	10 97       	sbiw	r26, 0x00	; 0
    10b2:	81 f4       	brne	.+32     	; 0x10d4 <free+0x3e>
    10b4:	20 81       	ld	r18, Z
    10b6:	31 81       	ldd	r19, Z+1	; 0x01
    10b8:	82 0f       	add	r24, r18
    10ba:	93 1f       	adc	r25, r19
    10bc:	20 91 14 04 	lds	r18, 0x0414	; 0x800414 <__brkval>
    10c0:	30 91 15 04 	lds	r19, 0x0415	; 0x800415 <__brkval+0x1>
    10c4:	28 17       	cp	r18, r24
    10c6:	39 07       	cpc	r19, r25
    10c8:	51 f5       	brne	.+84     	; 0x111e <free+0x88>
    10ca:	f0 93 15 04 	sts	0x0415, r31	; 0x800415 <__brkval+0x1>
    10ce:	e0 93 14 04 	sts	0x0414, r30	; 0x800414 <__brkval>
    10d2:	67 c0       	rjmp	.+206    	; 0x11a2 <free+0x10c>
    10d4:	ed 01       	movw	r28, r26
    10d6:	20 e0       	ldi	r18, 0x00	; 0
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	ce 17       	cp	r28, r30
    10dc:	df 07       	cpc	r29, r31
    10de:	40 f4       	brcc	.+16     	; 0x10f0 <free+0x5a>
    10e0:	4a 81       	ldd	r20, Y+2	; 0x02
    10e2:	5b 81       	ldd	r21, Y+3	; 0x03
    10e4:	9e 01       	movw	r18, r28
    10e6:	41 15       	cp	r20, r1
    10e8:	51 05       	cpc	r21, r1
    10ea:	f1 f0       	breq	.+60     	; 0x1128 <free+0x92>
    10ec:	ea 01       	movw	r28, r20
    10ee:	f5 cf       	rjmp	.-22     	; 0x10da <free+0x44>
    10f0:	d3 83       	std	Z+3, r29	; 0x03
    10f2:	c2 83       	std	Z+2, r28	; 0x02
    10f4:	40 81       	ld	r20, Z
    10f6:	51 81       	ldd	r21, Z+1	; 0x01
    10f8:	84 0f       	add	r24, r20
    10fa:	95 1f       	adc	r25, r21
    10fc:	c8 17       	cp	r28, r24
    10fe:	d9 07       	cpc	r29, r25
    1100:	59 f4       	brne	.+22     	; 0x1118 <free+0x82>
    1102:	88 81       	ld	r24, Y
    1104:	99 81       	ldd	r25, Y+1	; 0x01
    1106:	84 0f       	add	r24, r20
    1108:	95 1f       	adc	r25, r21
    110a:	02 96       	adiw	r24, 0x02	; 2
    110c:	91 83       	std	Z+1, r25	; 0x01
    110e:	80 83       	st	Z, r24
    1110:	8a 81       	ldd	r24, Y+2	; 0x02
    1112:	9b 81       	ldd	r25, Y+3	; 0x03
    1114:	93 83       	std	Z+3, r25	; 0x03
    1116:	82 83       	std	Z+2, r24	; 0x02
    1118:	21 15       	cp	r18, r1
    111a:	31 05       	cpc	r19, r1
    111c:	29 f4       	brne	.+10     	; 0x1128 <free+0x92>
    111e:	f0 93 17 04 	sts	0x0417, r31	; 0x800417 <__flp+0x1>
    1122:	e0 93 16 04 	sts	0x0416, r30	; 0x800416 <__flp>
    1126:	3d c0       	rjmp	.+122    	; 0x11a2 <free+0x10c>
    1128:	e9 01       	movw	r28, r18
    112a:	fb 83       	std	Y+3, r31	; 0x03
    112c:	ea 83       	std	Y+2, r30	; 0x02
    112e:	49 91       	ld	r20, Y+
    1130:	59 91       	ld	r21, Y+
    1132:	c4 0f       	add	r28, r20
    1134:	d5 1f       	adc	r29, r21
    1136:	ec 17       	cp	r30, r28
    1138:	fd 07       	cpc	r31, r29
    113a:	61 f4       	brne	.+24     	; 0x1154 <free+0xbe>
    113c:	80 81       	ld	r24, Z
    113e:	91 81       	ldd	r25, Z+1	; 0x01
    1140:	84 0f       	add	r24, r20
    1142:	95 1f       	adc	r25, r21
    1144:	02 96       	adiw	r24, 0x02	; 2
    1146:	e9 01       	movw	r28, r18
    1148:	99 83       	std	Y+1, r25	; 0x01
    114a:	88 83       	st	Y, r24
    114c:	82 81       	ldd	r24, Z+2	; 0x02
    114e:	93 81       	ldd	r25, Z+3	; 0x03
    1150:	9b 83       	std	Y+3, r25	; 0x03
    1152:	8a 83       	std	Y+2, r24	; 0x02
    1154:	e0 e0       	ldi	r30, 0x00	; 0
    1156:	f0 e0       	ldi	r31, 0x00	; 0
    1158:	12 96       	adiw	r26, 0x02	; 2
    115a:	8d 91       	ld	r24, X+
    115c:	9c 91       	ld	r25, X
    115e:	13 97       	sbiw	r26, 0x03	; 3
    1160:	00 97       	sbiw	r24, 0x00	; 0
    1162:	19 f0       	breq	.+6      	; 0x116a <free+0xd4>
    1164:	fd 01       	movw	r30, r26
    1166:	dc 01       	movw	r26, r24
    1168:	f7 cf       	rjmp	.-18     	; 0x1158 <free+0xc2>
    116a:	8d 91       	ld	r24, X+
    116c:	9c 91       	ld	r25, X
    116e:	11 97       	sbiw	r26, 0x01	; 1
    1170:	9d 01       	movw	r18, r26
    1172:	2e 5f       	subi	r18, 0xFE	; 254
    1174:	3f 4f       	sbci	r19, 0xFF	; 255
    1176:	82 0f       	add	r24, r18
    1178:	93 1f       	adc	r25, r19
    117a:	20 91 14 04 	lds	r18, 0x0414	; 0x800414 <__brkval>
    117e:	30 91 15 04 	lds	r19, 0x0415	; 0x800415 <__brkval+0x1>
    1182:	28 17       	cp	r18, r24
    1184:	39 07       	cpc	r19, r25
    1186:	69 f4       	brne	.+26     	; 0x11a2 <free+0x10c>
    1188:	30 97       	sbiw	r30, 0x00	; 0
    118a:	29 f4       	brne	.+10     	; 0x1196 <free+0x100>
    118c:	10 92 17 04 	sts	0x0417, r1	; 0x800417 <__flp+0x1>
    1190:	10 92 16 04 	sts	0x0416, r1	; 0x800416 <__flp>
    1194:	02 c0       	rjmp	.+4      	; 0x119a <free+0x104>
    1196:	13 82       	std	Z+3, r1	; 0x03
    1198:	12 82       	std	Z+2, r1	; 0x02
    119a:	b0 93 15 04 	sts	0x0415, r27	; 0x800415 <__brkval+0x1>
    119e:	a0 93 14 04 	sts	0x0414, r26	; 0x800414 <__brkval>
    11a2:	df 91       	pop	r29
    11a4:	cf 91       	pop	r28
    11a6:	08 95       	ret

000011a8 <_exit>:
    11a8:	f8 94       	cli

000011aa <__stop_program>:
    11aa:	ff cf       	rjmp	.-2      	; 0x11aa <__stop_program>
